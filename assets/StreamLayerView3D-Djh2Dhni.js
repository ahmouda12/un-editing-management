import{x as r,y as i,B as d,eW as M,ab as O,eP as y,f1 as k,cR as _,b5 as R,s as T,aX as $}from"./index-B252NKV0.js";import{o as C}from"./StreamFeatureManager-B4_Mzna5.js";import{createConnection as G}from"./createConnection-Ct1yK_Xd.js";import{h as P}from"./EventedSet-DiMjS89L.js";import{b as x}from"./HeatmapDensity.glsl-9Ce39aAk.js";import{n as j}from"./LayerView3D-7HzYlANA.js";import{C as E}from"./ElevationContext-0u_g65xQ.js";import{u as U}from"./LayerView-D2pvr0Q6.js";import{r as V}from"./StreamLayerView-CVQZl_hr.js";import"./CircularArray-DfLrgW_-.js";import"./query-BpTWe5Tk.js";import"./normalizeUtils-PvjooRb6.js";import"./normalizeUtilsCommon-ByXMGwNF.js";import"./pbfQueryUtils-DrPEsJ0j.js";import"./pbf-dp1_jIdk.js";import"./OptimizedGeometry-DLPswkPy.js";import"./OptimizedFeature-CXeSoBCN.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./hydratedFeatures-BRhOD9YG.js";import"./geometryServiceUtils-DQSAcvNz.js";import"./ReactiveMap-DcQhQdHv.js";import"./dehydratedFeatures-Dt-SjqTC.js";import"./dehydratedFeatureComparison-CxonwESs.js";import"./EdgeShader.glsl-B6xvxs0N.js";import"./WaterSurface.glsl-DJiRVkTI.js";import"./Scheduler-D2EdV-K_.js";import"./debugFlags-BYwEz_hP.js";import"./RenderState-DaVlEYWY.js";import"./ColorMaterial.glsl-9YKbkIUs.js";import"./mat3-DPPMYMhB.js";import"./BufferView-DithrMUX.js";import"./IntegerPassUniform-BV9MAEur.js";import"./enums-DSseSvdG.js";import"./Texture-BT-WYJiR.js";import"./BindType-BmZEZMMh.js";import"./interfaces-CGza0uBR.js";import"./Util-DsJryf9x.js";import"./VertexAttribute-BnAa5VW0.js";import"./basicInterfaces-DngWxyLO.js";import"./ShaderTechniqueConfiguration-Ba2Oo7i0.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Material-5cwIpifF.js";import"./ContentObject-BZXFh7BC.js";import"./requestImageUtils-DzTga_rS.js";import"./InterleavedLayout-DjPFAyuB.js";import"./types-D0PSWh4d.js";import"./VertexColor.glsl-D4WHfTL4.js";import"./OrderIndependentTransparency-Dar7ikM6.js";import"./floatRGBA-0vmpOgzj.js";import"./Attribute-B-NAci_J.js";import"./Geometry-Ba4xjwln.js";import"./Indices-BSZ2vHzt.js";import"./triangle-BvzaHny8.js";import"./lineSegment-BMYSACYW.js";import"./vec2f32-BbH2jxlN.js";import"./featureConversionUtils-BVsMNPzF.js";import"./edgeUtils-M6KOVtH3.js";import"./earcut-gCDAS0gj.js";import"./computeTranslationToOriginAndRotation-BwxvMbbc.js";import"./DoubleArray-DydFqj4b.js";import"./vec3-DPfuEKPJ.js";import"./SnappingCandidate-O5eRSE6e.js";import"./triangulationUtils-B5WoxWgr.js";import"./deduplicate-aiEVsYi-.js";import"./ElevationProvider-Z72XcWTz.js";import"./boundedPlane-YCrsjrS8.js";import"./verticalOffsetUtils-Byw9d5zq.js";import"./orientedBoundingBox-B61nPEal.js";import"./quat-3FyS98Fp.js";import"./spatialReferenceEllipsoidUtils-DV15qcib.js";import"./Normals-C_NhLO8Y.js";import"./RealisticTree.glsl-CwQ9Or_P.js";import"./DefaultMaterial_COLOR_GAMMA-DpjIaYJf.js";import"./resourceUtils-BT8kUm1Z.js";import"./NestedMap-DgiGbX8E.js";import"./symbolColorUtils-D89hqBDM.js";import"./CIMSymbolHelper-ZEeHC0zq.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-oEBemou-.js";import"./GeometryUtils-BvoQHMVi.js";import"./enums-BRqP_wXA.js";import"./definitions-B54owTRu.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./line-MrNX-P16.js";import"./projectVectorToPoint-C5fA5x6U.js";import"./MeshComponent-Vga6qE-G.js";import"./imageUtils-LnXySzmN.js";import"./meshVertexSpaceUtils-gkGG_eew.js";import"./MeshLocalVertexSpace-BNetD1iK.js";import"./georeference-TQxFGYYy.js";import"./axisAngleDegrees-C5xDLED1.js";import"./interfaces-DkjgzG8v.js";import"./frustum-VM_sBTPR.js";import"./DefaultLayouts-C3Py-gzy.js";import"./glUtil-DS73TAjp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./Octree-C_vy2cBS.js";import"./BufferObject-DdM-Y0w0.js";import"./Intersector-Cp54otHo.js";import"./weather-BLxro0E8.js";import"./RenderCoordsHelper-D0uwfR3O.js";import"./scaleUtils-BKVOuLFd.js";import"./DefaultUI-4DBz9mkp.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./heightModelInfoUtils-CYfboRg2.js";import"./mat2df64-CBKYtunK.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./accessibleHandler-yeijlTke.js";import"./Compass-BqUvL1gL.js";import"./utils-DsJqvptN.js";import"./GoTo-B08Csiw_.js";import"./NavigationToggle-DNdSP6VQ.js";import"./Zoom-BQUhauBk.js";import"./viewpointUtils-QCB8ouyq.js";import"./earthUtils-DV53znm3.js";import"./spatialReferenceSupport-7FaIbiiv.js";import"./ElevationSamplerData-CLGqTcb_.js";import"./terrainUtils-uYCMkPpW.js";import"./TileInfo-Cj0aaJ6S.js";import"./TileKey-DZd6gJy7.js";import"./Environment-CdSNjorT.js";import"./projectPointToWGS84ComparableLonLat-JSQbLxiZ.js";import"./vec3f32-Cw9Q6TO_.js";import"./Program-wFflZSL5.js";import"./ShadowCastVisualizeTechniqueConfiguration-Cw3UK_Yj.js";import"./ray-DAW-uzC6.js";import"./ZoomMomentumEstimator-gQBuScvi.js";import"./labelFormatUtils-H994QWFK.js";import"./FeatureTileDescriptor3D-DHCjGIg_.js";import"./ElevationQueryTileCache-BKuK8tEK.js";import"./LayerConstants-B33OP6sh.js";import"./Intersector-DFmhN7LU.js";import"./ElevationRange-BrgM1moX.js";import"./LercDecoder-DU0V7Jru.js";import"./WorkerHandle-CzrOFJZz.js";import"./RenderableTile-DtAne7GO.js";import"./enums-BRzLM11V.js";import"./TileStrategy-l1611y-Q.js";import"./TileKey-Dt_FQSdw.js";import"./QueueProcessor-CvAp86Lk.js";import"./VertexArrayObject-adc8SYn-.js";import"./config-MDUrh2eL.js";import"./DefaultVertexAttributeLayouts-o8Fw2Bif.js";import"./DisplayObject-B2mbaom_.js";import"./rasterUtils-Cy3YcRxv.js";import"./StyleDefinition-pu9RBNlY.js";import"./resources-DHuiDxSF.js";import"./edgeProcessing-y5myZLSQ.js";import"./EdgeWorkerHandle-BwQg52ff.js";import"./workerHelper-DtT1uotp.js";import"./testSVGPremultipliedAlpha-BWu01myj.js";import"./RenderingContext-WP9tAZpV.js";import"./ProgramCache-pF_7Wga5.js";import"./queryForSymbologySnapping-D3QODN7Y.js";import"./hash-CcEbRgUF.js";import"./Graphics3DScaleVisibility-CVgbcctn.js";import"./rendererConversion-QD-kwf0Q.js";import"./optimizedFeatureQueryEngineAdapter-DY8fepQr.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-BMw2Tug7.js";import"./quickselect-CDrMhodd.js";import"./popupUtils-B33__man.js";import"./QueryEngine-BJrJiLD2.js";import"./WhereClause-BU9DyVxJ.js";import"./timeSupport-C0A6H9UZ.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-DTu9e8kw.js";import"./utils-BAXu7jWt.js";import"./ClassBreaksDefinition-CDnaW8Xp.js";import"./FeatureStore-DGgGcpyF.js";import"./BoundsStore-BVeO8mTT.js";import"./heatmapTextureUtils-BX_wQ43L.js";import"./projectExtentUtils-BH2-rb7a.js";const F=2500;let m=class extends R{getObjectId(){return this.objectId}};r([i({type:Number,json:{read:!0}})],m.prototype,"objectId",void 0),m=r([d("esri.layers.graphics.controllers.StreamGraphic")],m);class L{constructor(e){this.onUpdate=e,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(e){this._idToGraphic.set(e.objectId,e)}get(e){return this._idToGraphic.get(e)}forEach(e){this._idToGraphic.forEach(e)}removeById(e){const o=this._idToGraphic.get(e);return o?(o.sourceLayer=o.layer=null,this._idToGraphic.delete(e),o):null}update(e,o){this.onUpdate(e,o)}get size(){return this._idToGraphic.size}}let p=class extends M(O){constructor(){super(...arguments),this.isPaused=!1,this.graphics=new P,this._updateInfo={websocket:0,client:0},this._updateIntervalId=null,this._outSpatialReference=null}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId!==null&&(clearInterval(this._updateIntervalId),this._updateIntervalId=null)}clear(){this._shutdown(),this.graphics.clear()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_shutdown(){this._clearInterval(),this.connection=y(this.connection),this.store=y(this.store),this.removeAllHandles()}_startup(){const{layer:t,layerView:e}=this,{spatialReference:o,definitionExpression:a,geometryDefinition:c,objectIdField:l,timeInfo:f,purgeOptions:g,maxReconnectionAttempts:v,maxReconnectionInterval:I,customParameters:w}=t,b=t.geometryType?k.toJSON(t.geometryType):null,S=o,h=e.view.spatialReference;this.clear(),this._set("connection",G(t.parsedUrl,S,h,b,a,c,v,I,w??void 0)),this._outSpatialReference=h.toJSON(),this.store=new L(this._onUpdate.bind(this)),this.featuresManager=new C(this.store,l,f.toJSON(),g);const u="startup-watches";this.removeHandles(u),this.addHandles([t.on("send-message-to-socket",n=>this.connection.sendMessageToSocket(n)),t.on("send-message-to-client",n=>this.connection.sendMessageToClient(n)),this.connection.on("data-received",n=>this._onFeature(n)),this.connection.on("message-received",n=>this._onWebSocketMessage(n)),_(()=>[t.definitionExpression,t.geometryDefinition,t.purgeOptions],()=>this._startup())],u),this.isPaused||this._initUpdateInterval()}_onWebSocketMessage(t){if(this.layerView.emit("message-received",t),"type"in t)switch(t.type){case"delete":if(t.objectIds)for(const e of t.objectIds)this.featuresManager.removeById(e);if(t.trackIds)for(const e of t.trackIds)this.featuresManager.removeByTrackId(e);break;case"clear":this.store.forEach(e=>this.featuresManager.removeById(e.objectId))}}_onFeature(t){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:t.attributes,centroid:t.centroid,geometry:t.geometry});try{t.geometry==null||t.geometry.spatialReference||(t.geometry.spatialReference=this._outSpatialReference);const e=m.fromJSON(t);e.sourceLayer=e.layer=this.layer,this.featuresManager.add(e)}catch{}}_onUpdate(t,e){e!=null&&this.graphics.removeMany(e),t!=null&&(this._updateInfo.client+=t.length,this.graphics.addMany(t))}_initUpdateInterval(){this._clearInterval();const{updateInterval:t}=this.layer;let e=performance.now();this._updateIntervalId=setInterval(()=>{const o=performance.now(),a=o-e;if(a>F){e=o;const c=Math.round(this._updateInfo.client/(a/1e3)),l=Math.round(this._updateInfo.websocket/(a/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:c,websocket:l})}this.featuresManager.checkForUpdates()},t)}pauseStream(){this.isPaused=!0,this._clearInterval()}resumeStream(){this.isPaused=!1,this._initUpdateInterval()}disconnect(){this._shutdown()}connect(){this.connection==null&&this._startup()}clearGraphics(){this.graphics.clear()}};r([i()],p.prototype,"isPaused",void 0),r([i({constructOnly:!0})],p.prototype,"layer",void 0),r([i({constructOnly:!0})],p.prototype,"layerView",void 0),r([i()],p.prototype,"connection",void 0),r([i({readOnly:!0})],p.prototype,"updating",null),p=r([d("esri.layers.graphics.controllers.StreamController")],p);let s=class extends V(x(j(U))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=E.ASYNC,this.hasZ=!0,this.hasM=!1}initialize(){this.addHandles(_(()=>this.suspended,t=>{this.controller&&this._onSuspendedChange(t)}))}get connectionError(){var e,o;const t=(o=(e=this.controller)==null?void 0:e.connection)==null?void 0:o.errorString;return t?new T("stream-controller",t):null}createQuery(){return new $({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(t,e){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(t),e==null?void 0:e.signal)}get _streamConnectionStatus(){var t,e;return((e=(t=this.controller)==null?void 0:t.connection)==null?void 0:e.connectionStatus)??"disconnected"}createController(){return new p({layer:this.layer,layerView:this})}beforeSetController(){}_doPause(){var t;(t=this.controller)==null||t.pauseStream()}_doResume(){var t;(t=this.controller)==null||t.resumeStream()}_doDisconnect(){var t;(t=this.controller)==null||t.disconnect(),this._doPause()}_doConnect(){var t;(t=this.controller)==null||t.connect(),this.resume()}_doClear(){var t;(t=this.controller)==null||t.clearGraphics()}};r([i({readOnly:!0})],s.prototype,"updatePolicy",void 0),r([i({readOnly:!0})],s.prototype,"connectionError",null),r([i()],s.prototype,"controller",void 0),r([i({readOnly:!0})],s.prototype,"hasZ",void 0),r([i({readOnly:!0})],s.prototype,"hasM",void 0),r([i({readOnly:!0})],s.prototype,"_streamConnectionStatus",null),s=r([d("esri.views.3d.layers.StreamLayerView3D")],s);const ro=s;export{ro as default};
