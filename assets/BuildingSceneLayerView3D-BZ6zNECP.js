import{eW as Q,eV as A,eX as B,x as n,y as l,B as E,kc as N,ab as L,eP as T,eT as w,fs as x,aU as y,fc as c,j0 as S,b5 as F,E as q,jg as U,a9 as G,s as V,aX as $,i$ as H,bh as I,cS as k,cR as C,bF as W,qf as j,g5 as D,ae as z,cE as X}from"./index-B252NKV0.js";import"./BuildingGroupSublayer-Cp6HJoh7.js";import{x as Y}from"./WhereClause-BU9DyVxJ.js";import"./BuildingComponentSublayer-Bl2puL8r.js";import{S as Z,u as J,n as K}from"./I3SMeshView3D-DvDEIizL.js";import{a as ee}from"./edgeUtils-M6KOVtH3.js";import{n as te}from"./symbolColorUtils-D89hqBDM.js";import{P as b,d as re,h as ie,o as se}from"./I3SQueryFeatureStore-8wye2fdF.js";import{L as oe,Z as ne,X as le}from"./I3SUtil-Bl4n3yEX.js";import{u as ae,t as pe}from"./TemporalSceneLayerView-BccrEb5I.js";import{u as ue,n as de,p as M}from"./popupUtils-B33__man.js";import{I as me}from"./Scheduler-D2EdV-K_.js";import{n as he}from"./LayerView3D-7HzYlANA.js";import{t as ye}from"./EdgeShader.glsl-B6xvxs0N.js";import{u as ce}from"./LayerView-D2pvr0Q6.js";import"./capabilities-Dyw9FsIa.js";import"./I3SIndexInfo-CSS6MU43.js";import"./I3SLayerDefinitions-BwcMGM1-.js";import"./mat3-DPPMYMhB.js";import"./LayerElevationProvider-BCiP_AlQ.js";import"./RenderTexture-BMjKBFU6.js";import"./ElevationRange-BrgM1moX.js";import"./WaterSurface.glsl-DJiRVkTI.js";import"./ElevationContext-0u_g65xQ.js";import"./Material-5cwIpifF.js";import"./interfaces-CGza0uBR.js";import"./basicInterfaces-DngWxyLO.js";import"./ContentObject-BZXFh7BC.js";import"./VertexAttribute-BnAa5VW0.js";import"./Util-DsJryf9x.js";import"./IntegerPassUniform-BV9MAEur.js";import"./enums-DSseSvdG.js";import"./Texture-BT-WYJiR.js";import"./BindType-BmZEZMMh.js";import"./ShaderTechniqueConfiguration-Ba2Oo7i0.js";import"./doublePrecisionUtils-B0owpBza.js";import"./requestImageUtils-DzTga_rS.js";import"./axisAngleDegrees-C5xDLED1.js";import"./quat-3FyS98Fp.js";import"./weather-BLxro0E8.js";import"./RenderState-DaVlEYWY.js";import"./NestedMap-DgiGbX8E.js";import"./frustum-VM_sBTPR.js";import"./Attribute-B-NAci_J.js";import"./Geometry-Ba4xjwln.js";import"./Indices-BSZ2vHzt.js";import"./triangle-BvzaHny8.js";import"./lineSegment-BMYSACYW.js";import"./Octree-C_vy2cBS.js";import"./InterleavedLayout-DjPFAyuB.js";import"./BufferView-DithrMUX.js";import"./types-D0PSWh4d.js";import"./OrderIndependentTransparency-Dar7ikM6.js";import"./floatRGBA-0vmpOgzj.js";import"./Intersector-DFmhN7LU.js";import"./ElevationProvider-Z72XcWTz.js";import"./boundedPlane-YCrsjrS8.js";import"./verticalOffsetUtils-Byw9d5zq.js";import"./orientedBoundingBox-B61nPEal.js";import"./spatialReferenceEllipsoidUtils-DV15qcib.js";import"./computeTranslationToOriginAndRotation-BwxvMbbc.js";import"./glUtil-DS73TAjp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-adc8SYn-.js";import"./BufferObject-DdM-Y0w0.js";import"./vec3f32-Cw9Q6TO_.js";import"./DoubleArray-DydFqj4b.js";import"./hydratedFeatures-BRhOD9YG.js";import"./ColorMaterial.glsl-9YKbkIUs.js";import"./VertexColor.glsl-D4WHfTL4.js";import"./vec2f32-BbH2jxlN.js";import"./dehydratedFeatures-Dt-SjqTC.js";import"./featureConversionUtils-BVsMNPzF.js";import"./OptimizedFeature-CXeSoBCN.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./OptimizedGeometry-DLPswkPy.js";import"./earcut-gCDAS0gj.js";import"./vec3-DPfuEKPJ.js";import"./SnappingCandidate-O5eRSE6e.js";import"./triangulationUtils-B5WoxWgr.js";import"./deduplicate-aiEVsYi-.js";import"./Normals-C_NhLO8Y.js";import"./RealisticTree.glsl-CwQ9Or_P.js";import"./DefaultMaterial_COLOR_GAMMA-DpjIaYJf.js";import"./resourceUtils-BT8kUm1Z.js";import"./CIMSymbolHelper-ZEeHC0zq.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-oEBemou-.js";import"./GeometryUtils-BvoQHMVi.js";import"./enums-BRqP_wXA.js";import"./definitions-B54owTRu.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./line-MrNX-P16.js";import"./projectVectorToPoint-C5fA5x6U.js";import"./MeshComponent-Vga6qE-G.js";import"./imageUtils-LnXySzmN.js";import"./meshVertexSpaceUtils-gkGG_eew.js";import"./MeshLocalVertexSpace-BNetD1iK.js";import"./georeference-TQxFGYYy.js";import"./interfaces-DkjgzG8v.js";import"./DefaultLayouts-C3Py-gzy.js";import"./Intersector-Cp54otHo.js";import"./LayerConstants-B33OP6sh.js";import"./I3SOverrides-A7cXJGr3.js";import"./I3SNode-DM1_uj7Y.js";import"./I3SBinaryReader-B7d1Waro.js";import"./ReactiveSet-BcKqDl-e.js";import"./meshFeatureSet-MPaz9zZz.js";import"./Mesh-igNR1QEk.js";import"./External-V-QaQ5u-.js";import"./FeatureLayerView3D-CeCbeq13.js";import"./FeatureLayerViewBase3D-Ckm4t6wN.js";import"./HeatmapDensity.glsl-9Ce39aAk.js";import"./geometryServiceUtils-DQSAcvNz.js";import"./ReactiveMap-DcQhQdHv.js";import"./dehydratedFeatureComparison-CxonwESs.js";import"./terrainUtils-uYCMkPpW.js";import"./TileInfo-Cj0aaJ6S.js";import"./TileKey-DZd6gJy7.js";import"./queryForSymbologySnapping-D3QODN7Y.js";import"./hash-CcEbRgUF.js";import"./Graphics3DScaleVisibility-CVgbcctn.js";import"./rendererConversion-QD-kwf0Q.js";import"./optimizedFeatureQueryEngineAdapter-DY8fepQr.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-BMw2Tug7.js";import"./quickselect-CDrMhodd.js";import"./QueryEngine-BJrJiLD2.js";import"./normalizeUtils-PvjooRb6.js";import"./normalizeUtilsCommon-ByXMGwNF.js";import"./timeSupport-C0A6H9UZ.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-DTu9e8kw.js";import"./utils-BAXu7jWt.js";import"./ClassBreaksDefinition-CDnaW8Xp.js";import"./scaleUtils-BKVOuLFd.js";import"./FeatureStore-DGgGcpyF.js";import"./BoundsStore-BVeO8mTT.js";import"./Program-wFflZSL5.js";import"./heatmapTextureUtils-BX_wQ43L.js";import"./projectExtentUtils-BH2-rb7a.js";import"./query-BpTWe5Tk.js";import"./pbfQueryUtils-DrPEsJ0j.js";import"./pbf-dp1_jIdk.js";import"./WorkerHandle-CzrOFJZz.js";import"./EventedSet-DiMjS89L.js";import"./FeatureLayerView-CPRRKm1X.js";import"./RefreshableLayerView-C0DsOPLI.js";import"./debugFlags-BYwEz_hP.js";import"./RenderCoordsHelper-D0uwfR3O.js";import"./DefaultUI-4DBz9mkp.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./heightModelInfoUtils-CYfboRg2.js";import"./mat2df64-CBKYtunK.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./accessibleHandler-yeijlTke.js";import"./Compass-BqUvL1gL.js";import"./utils-DsJqvptN.js";import"./GoTo-B08Csiw_.js";import"./NavigationToggle-DNdSP6VQ.js";import"./Zoom-BQUhauBk.js";import"./viewpointUtils-QCB8ouyq.js";import"./earthUtils-DV53znm3.js";import"./spatialReferenceSupport-7FaIbiiv.js";import"./ElevationSamplerData-CLGqTcb_.js";import"./Environment-CdSNjorT.js";import"./projectPointToWGS84ComparableLonLat-JSQbLxiZ.js";import"./ShadowCastVisualizeTechniqueConfiguration-Cw3UK_Yj.js";import"./ray-DAW-uzC6.js";import"./ZoomMomentumEstimator-gQBuScvi.js";import"./labelFormatUtils-H994QWFK.js";import"./FeatureTileDescriptor3D-DHCjGIg_.js";import"./ElevationQueryTileCache-BKuK8tEK.js";import"./LercDecoder-DU0V7Jru.js";import"./RenderableTile-DtAne7GO.js";import"./enums-BRzLM11V.js";import"./TileStrategy-l1611y-Q.js";import"./TileKey-Dt_FQSdw.js";import"./QueueProcessor-CvAp86Lk.js";import"./config-MDUrh2eL.js";import"./DefaultVertexAttributeLayouts-o8Fw2Bif.js";import"./DisplayObject-B2mbaom_.js";import"./rasterUtils-Cy3YcRxv.js";import"./StyleDefinition-pu9RBNlY.js";import"./resources-DHuiDxSF.js";import"./edgeProcessing-y5myZLSQ.js";import"./EdgeWorkerHandle-BwQg52ff.js";import"./workerHelper-DtT1uotp.js";import"./testSVGPremultipliedAlpha-BWu01myj.js";import"./RenderingContext-WP9tAZpV.js";import"./ProgramCache-pF_7Wga5.js";import"./SceneModification-CRfgO_qy.js";import"./persistable-B0Qw3aes.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-Vp_HFlZe.js";import"./SceneLayerWorker-BD-H_lfN.js";import"./makeScheduleFunction-CggzEh3c.js";const O=(r,e)=>{let t=class extends Q(A(B.EventedMixin(r))){constructor(i){super(i),this.sublayer=null,this.parent=null,this.view=null}initialize(){}get suspended(){return!this.canResume()}get updating(){return!this.suspended&&this.isUpdating()}get visible(){var i;return!!((i=this.sublayer)!=null&&i.visible)}set visible(i){this._overrideIfSome("visible",i)}get fullOpacity(){var s,o;const i=a=>a??1;return i((s=this.sublayer)==null?void 0:s.opacity)*i((o=this.parent)==null?void 0:o.fullOpacity)}canResume(){var i,s;return!((i=this.parent)!=null&&i.suspended)&&((s=this.view)==null?void 0:s.ready)&&this.visible||!1}isUpdating(){return!1}};return n([l()],t.prototype,"sublayer",void 0),n([l()],t.prototype,"parent",void 0),n([l({readOnly:!0})],t.prototype,"suspended",null),n([l({type:Boolean,readOnly:!0})],t.prototype,"updating",null),n([l()],t.prototype,"view",void 0),n([l()],t.prototype,"visible",null),n([l()],t.prototype,"fullOpacity",null),t=n([E("esri.views.3d.layers.BuildingSublayerView3D")],t),t};var d;(function(r){r[r.Solid=0]="Solid",r[r.WireFrame=1]="WireFrame",r[r.XRay=2]="XRay"})(d||(d={}));const P=.15,ge=.5*P;function fe(r){switch(r.filterMode.type){case"solid":return{mode:d.Solid};case"wire-frame":return{mode:d.WireFrame,edgeMaterial:ee(r.filterMode.edges,{})};case"x-ray":return{mode:d.XRay}}}function R(r,e){if(e==null)return r.color[3]=0,r.edgeMaterial=null,void(r.pickable=!1);switch(e.mode){case d.Solid:return;case d.WireFrame:return r.color[3]=0,r.edgeMaterial=e.edgeMaterial,void(r.pickable=!1);case d.XRay:return r.color[0]=1,r.color[1]=1,r.color[2]=1,r.color[3]*=P,r.colorMixMode=te.Replace,r.castShadows=!1,r.pickable=!1,void(r.edgeMaterial=be(r.edgeMaterial))}}function be(r){return r==null?null:(g.lastMaterial!==r&&(g.cachedMaterial=we(r),g.lastMaterial=r),g.cachedMaterial)}function we(r){const e=N(r.color);return e[3]*=ge,{...r,color:e}}const g={cachedMaterial:null,lastMaterial:null};class f extends L{constructor(){super(...arguments),this.sublayer=null}get updating(){return!1}get suspended(){return!1}get availableFields(){return[]}get filter(){return null}set filter(e){throw new Error("Not implemented")}queryFeatures(e,t){throw new Error("Not implemented")}queryObjectIds(e,t){throw new Error("Not implemented")}queryFeatureCount(e,t){throw new Error("Not implemented")}createQuery(){throw new Error("Not implemented")}queryExtent(e,t){throw new Error("Not implemented")}highlight(e){throw new Error("Not implemented")}}n([l()],f.prototype,"sublayer",void 0),n([l()],f.prototype,"availableFields",null),n([l()],f.prototype,"filter",null);let p=class extends ae(pe(Z(O(f)))){constructor(){super(...arguments),this.type="building-component-sublayer-3d",this.layerView=null,this._elevationContext="scene",this._isIntegratedMesh=!1,this._supportsLabeling=!1,this.requiredFields=[],this.progressiveLoadFactor=1,this._queryEngine=null}get i3slayer(){return this.sublayer}get layerUid(){return this.sublayer.layer.uid}get sublayerUid(){return this.sublayer.uid}get layerId(){return this.sublayer.layer.id}get sublayerId(){return this.sublayer.id}get layerPopupEnabledAndHasTemplate(){var e,t;return this.sublayer.popupEnabled&&ue(this.sublayer,(t=(e=this.layerView)==null?void 0:e.view.popup)==null?void 0:t.defaultPopupTemplateEnabled)}initialize(){this._updatingHandles.add(()=>this.mergedFilter,t=>{t!=null&&b.checkSupport(t)?this._i3sFilter==null?this._i3sFilter=new b({viewFilter:t,layerFieldsIndex:this.sublayer.fieldsIndex,loadAsyncModule:i=>this._loadAsyncModule(i),addSqlFilter:(i,s)=>this.addSqlFilter(i,s,this.logError),addTimeFilter:(i,s)=>this.addTimeFilter(i,s)}):this._i3sFilter.viewFilter=t:this._i3sFilter=T(this._i3sFilter)},w),this._updatingHandles.add(()=>[this.sublayer.renderer,this.definitionExpressionFields,this.filterExpressionFields,this.timeFilterFields],()=>this._updateRequiredFields()),this._updatingHandles.add(()=>this.sublayer.renderer,t=>this._rendererChange(t),x);const e=()=>this._filterChange();this._updatingHandles.add(()=>this.parsedDefinitionExpression,e),this._updatingHandles.add(()=>{var t;return(t=this._i3sFilter)==null?void 0:t.sortedObjectIds},e),this._updatingHandles.add(()=>{var t;return(t=this._i3sFilter)==null?void 0:t.parsedWhereClause},e),this._updatingHandles.add(()=>this.getTimeFilterDependencies(),e),this._updatingHandles.add(()=>this.mergedFilter,e),this._updatingHandles.add(()=>{var t,i;return[(t=this._i3sFilter)==null?void 0:t.parsedGeometry,(i=this.filter)==null?void 0:i.spatialRelationship]},()=>this._geometryFilterChange()),this._updatingHandles.add(()=>this.parsedFilterExpressions,()=>this._updateSymbologyOverride(),x),this.addResolvingPromise(this._updateRequiredFields())}get lodFactor(){return this.view.qualitySettings.sceneService.object.lodFactor}get parsedFilterExpressions(){return this.sublayer.modelName!=="Overview"&&this.layerView?this.layerView.filterExpressions.map(([e,t])=>{let i;try{i=Y.create(e,this.sublayer.fieldsIndex)}catch(a){return y.getLogger(this).error("Failed to parse filterExpression: "+a),null}if(!i.isStandardized)return y.getLogger(this).error("filterExpression is using non standard function"),null;const s=[],o=i.fieldNames;return oe(o,this.sublayer.fields,{missingFields:s}),s.length>0?(y.getLogger(this).error(`filterExpression references unknown fields: ${s.join(", ")}`),null):[i,t]}).filter(e=>e!=null):[]}get filter(){return this._get("filter")}set filter(e){this._set("filter",b.checkSupport(e)?e:null)}isUpdating(){var e;return super.isUpdating()||(((e=this._i3sFilter)==null?void 0:e.updating)??!1)}_updateSymbologyOverride(){const e=this.parsedFilterExpressions;e.length>0?this._setSymbologyOverride((t,i)=>{for(const[s,o]of e)try{if(s.testFeature(t))return R(i,o)}catch(a){this.logError(a)}return R(i,null)},this.filterExpressionFields):this._setSymbologyOverride(null,null)}get filterExpressionFields(){return c(this.sublayer.fieldsIndex,this.parsedFilterExpressions.reduce((e,[t])=>e.concat(t.fieldNames),new Array))}get timeFilterFields(){const{timeExtent:e}=this,{timeInfo:t,fieldsIndex:i}=this.sublayer;if(e==null||t==null)return[];const{startField:s,endField:o}=t;return c(i,[s,o])}get availableFields(){const e=this.sublayer,t=e.fieldsIndex;let i=this.requiredFields;if(e.outFields||e.layer.outFields){const s=[...e.outFields||[],...e.layer.outFields||[]];i=[...S(t,s),...i]}return c(t,i)}_createLayerGraphic(e){const t=new F(null,null,e);return t.layer=this.sublayer.layer,t.sourceLayer=this.sublayer,t}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}async fetchPopupFeaturesFromGraphics(e,t){const i=this._validateFetchPopupFeatures(t);if(i)throw i;if(e.length===0)return[];const s=[],o=[],a=this.sublayer.associatedLayer!=null?await this.sublayer.associatedLayer.load(t):this.sublayer,h=S(this.sublayer.fieldsIndex,await de(a,M(this.sublayer,t)));q(t);const v=new Set;for(const m of e)U(h,m,v)?o.push(m):s.push(m);return o.length===0?s:(this.sublayer.associatedLayer!=null&&await this.sublayer.associatedLayer.load().catch(()=>y.getLogger(this).warn("Failed to load associated feature layer. Displaying popup attributes from cached attributes.")),this.whenGraphicAttributes(o,Array.from(v)).catch(m=>(G(m),o)).then(m=>s.concat(m)))}async _updateRequiredFields(){const e=c(this.sublayer.fieldsIndex,[...this.sublayer.renderer?await this.sublayer.renderer.getRequiredFields(this.sublayer.fieldsIndex):[],...this.definitionExpressionFields,...this.filterExpressionFields,...this.timeFilterFields]);this._set("requiredFields",e)}_validateFetchPopupFeatures(e){const{sublayer:t}=this,{popupEnabled:i}=t;return i?M(t,e)?void 0:new V("buildingscenelayerview3d:fetchPopupFeatures","Layer does not define a popup template",{sublayer:t}):new V("buildingscenelayerview3d:fetchPopupFeatures","Popups are disabled",{sublayer:t})}getFilters(){var t;const e=super.getFilters();return this.addSqlFilter(e,this.parsedDefinitionExpression,this.logError),(t=this._i3sFilter)==null||t.addFilters(e,this.view,this._controller.crsIndex,this._collection),e}createQuery(){const e={outFields:["*"],returnGeometry:!1,outSpatialReference:this.view.spatialReference};return this.filter!=null?this.filter.createQuery(e):new $(e)}queryExtent(e,t){return this._ensureQueryEngine().executeQueryForExtent(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatureCount(e,t){return this._ensureQueryEngine().executeQueryForCount(this._ensureQuery(e),t==null?void 0:t.signal)}queryFeatures(e,t){return this._ensureQueryEngine().executeQuery(this._ensureQuery(e),t==null?void 0:t.signal).then(i=>{if(!(i!=null&&i.features))return i;const s=this.sublayer,o=s.layer;for(const a of i.features)a.layer=o,a.sourceLayer=s;return i})}queryObjectIds(e,t){return this._ensureQueryEngine().executeQueryForIds(this._ensureQuery(e),t==null?void 0:t.signal)}_ensureQueryEngine(){return this._queryEngine==null&&(this._queryEngine=this._createQueryEngine()),this._queryEngine}_createQueryEngine(){const e=J(this.view.spatialReference,this.view.renderSpatialReference,this._collection);return new re({layerView:this,priority:me.FEATURE_QUERY_ENGINE,spatialIndex:new ie({featureAdapter:new se({objectIdField:this.sublayer.objectIdField,attributeStorageInfo:this.sublayer.attributeStorageInfo,getFeatureExtent:e}),forAllFeatures:(t,i)=>this._forAllFeatures((s,o,a)=>t({id:s,index:o,meta:a}),i,K.QUERYABLE),getFeatureExtent:e,sourceSpatialReference:ne(this.sublayer),viewSpatialReference:this.view.spatialReference})})}_ensureQuery(e){return this._addDefinitionExpressionToQuery(e==null?this.createQuery():$.from(e))}};n([l()],p.prototype,"i3slayer",null),n([l()],p.prototype,"layerView",void 0),n([l()],p.prototype,"lodFactor",null),n([l({readOnly:!0})],p.prototype,"parsedFilterExpressions",null),n([l({type:H})],p.prototype,"filter",null),n([l()],p.prototype,"_i3sFilter",void 0),n([l({type:[String],readOnly:!0})],p.prototype,"filterExpressionFields",null),n([l({type:[String],readOnly:!0})],p.prototype,"timeFilterFields",null),n([l({type:[String],readOnly:!0})],p.prototype,"requiredFields",void 0),n([l({type:[String],readOnly:!0})],p.prototype,"availableFields",null),p=n([E("esri.views.3d.layers.BuildingComponentSublayerView3D")],p);const Fe=p;class _ extends ce{constructor(e){super(e),this.layer=null,this.sublayerViews=null}highlight(e){throw new Error("Not implemented")}}n([l()],_.prototype,"layer",void 0),n([l()],_.prototype,"sublayerViews",void 0);const _e=O(L);let u=class extends he(_){constructor(r){super(r),this.type="building-scene-3d",this.sublayerViews=new I,this._abortController=new AbortController,this._loadingComponents=0,this._pendingWhenSublayerViews=new Map,this.ignoresMemoryFactor=!1}get filterExpression(){var i;const r=this.layer.activeFilterId,e=r!=null?this.layer.filters.find(s=>s.id===r):null,t=e!=null?(i=e.filterBlocks)==null?void 0:i.find(s=>s.filterMode.type==="solid"):null;return t?t.filterExpression:null}get filterExpressions(){const r=this.layer.activeFilterId,e=r!=null?this.layer.filters.find(t=>t.id===r):null;return e!=null&&e.filterBlocks?e.filterBlocks.toArray().map(t=>[t.filterExpression??"",fe(t)]):[]}get updatingProgressValue(){const r=this.sublayerViews,e=this._loadingComponents+(r?r.length:0);return r.reduce((t,i)=>t+i.updatingProgress,0)/e}isUpdating(){return this._loadingComponents>0||this.sublayerViews&&this.sublayerViews.some(r=>r.updating)}initialize(){le(this.layer.spatialReference,this.view.spatialReference,this.view.viewingMode),this._initializeSubLayerViews(this.layer.sublayers,this)}destroy(){this.sublayerViews&&(this.sublayerViews.forEach(r=>r.destroy()),this.sublayerViews=null),this._abortController=k(this._abortController)}_initializeSubLayerViews(r,e){const t=this,i=this.view;r.forEach(s=>{if(!s.isEmpty)if(s.type==="building-group"){const o=new _e({sublayer:s,view:i,parent:e});this._initializeSubLayerViews(s.sublayers,o)}else s.geometryType==="mesh"&&(this._loadingComponents++,s.load({signal:this._abortController.signal}).then(()=>{const o=new Fe({sublayer:s,layerView:t,view:i,parent:e});this.sublayerViews.push(o);const a=this._pendingWhenSublayerViews.get(s);if(a){for(const h of a)h.resolve(o);this._pendingWhenSublayerViews.delete(s)}this.addHandles([C(()=>o.updating,()=>this.notifyChange("updating"),w),C(()=>o.updatingProgress,()=>this.notifyChange("updatingProgressValue"),w)])}).catch(o=>{W(o)||y.getLogger(this).error(`Error while creating view for sublayer ${s.id}
Layer: ${this.layer.url}
`,o)}).then(()=>{this._loadingComponents--,this.notifyChange("updating"),this.notifyChange("updatingProgressValue")}))})}getGraphicFromIntersectorTarget(r){for(const e of this.sublayerViews.items)if(e.sublayer.uid===r.sublayerUid)return e.getGraphicFromIntersectorTarget(r);return null}async fetchPopupFeaturesFromGraphics(r,e){if(r.length===0)return[];const t=j(r,o=>o.sourceLayer),i=[];for(const[o,a]of t){const h=this._findComponent(o);h!=null&&i.push(h.fetchPopupFeaturesFromGraphics(a,e))}const s=await D(i);return q(e),s.flat()}whenGraphicBounds(r){const e=this._findComponent(r.sourceLayer);return e==null?Promise.reject():e.whenGraphicBounds(r)}getAABBFromIntersectorTarget(r){for(const e of this.sublayerViews.items)if(e.sublayer.uid===r.sublayerUid)return e.getAABBFromIntersectorTarget(r);return null}async whenSublayerView(r){const e=this._findComponent(r);if(e!=null)return e;const t=this._pendingWhenSublayerViews.get(r),i=z();return t?t.push(i):this._pendingWhenSublayerViews.set(r,[i]),i.promise}_findComponent(r){return this.sublayerViews.find(e=>r===e.sublayer)}highlight(r){r instanceof F?r=[r]:r instanceof I&&(r=r.toArray());const e=[];if(Array.isArray(r)&&r.length>0&&r[0]instanceof F){const t=r,i=new Map;for(const s of t){let o=i.get(s.sourceLayer);o==null&&(o=[],i.set(s.sourceLayer,o)),o.push(s)}this.sublayerViews.forEach(s=>{const o=i.get(s.sublayer);o&&e.push(s.highlight(o))})}return X(e)}get usedMemory(){return this.sublayerViews.reduce((r,e)=>r+e.usedMemory,0)}get unloadedMemory(){return this.sublayerViews.reduce((r,e)=>r+e.unloadedMemory,0)}};n([l()],u.prototype,"sublayerViews",void 0),n([l({readOnly:!0})],u.prototype,"filterExpression",null),n([l({readOnly:!0})],u.prototype,"filterExpressions",null),n([l(ye)],u.prototype,"updatingProgress",void 0),n([l({readOnly:!0,dependsOn:[]})],u.prototype,"updatingProgressValue",null),u=n([E("esri.views.3d.layers.BuildingSceneLayerView3D")],u);const as=u;export{as as default};
