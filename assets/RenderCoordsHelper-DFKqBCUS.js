import{f as R,h8 as $,ij as v,kd as b,cw as c,dZ as M,bL as x,bO as w,ci as f,c5 as d,cx as B,df as m,c9 as o,ke as G,kf as k,d1 as U,en as u,cc as Z,iu as z,dl as S,bJ as L,b3 as y}from"./index-DPJiPkbh.js";import{a as P}from"./spatialReferenceEllipsoidUtils-MJ9Uj9G-.js";import{t as O}from"./projectVectorToPoint-iRqWB51r.js";import{H as j,_ as E}from"./boundedPlane-C7AEtm0i.js";import{c as _}from"./ElevationProvider-DuAnZ1w5.js";function F(s){const{value:t,operations:e}=s;return{operations:e,value:e.create(t)}}function I(s,t,e){return s.operations.setExtent(s.value,t,e.value),e}function T(s){return{operations:s,value:s.create()}}function C(s,t,e=T(s)){return e.operations=s,s.copy(t,e.value),e}function Y(s){return C(b,$(0,0,0,v(s).radius))}const A=2**50;function q(){return C(E,j([0,0,0],[A,0,0],[0,A,0]))}function H(s,t,e){return s.operations.axisAt(s.value,t,c.Z,e)}function J(s,t,e,n){return s.operations.axisAt(s.value,t,e,n)}function W(s,t,e){return s.operations.intersectRay(s.value,t,e)}function X(s,t,e){return s.operations.intersectRayClosestSilhouette(s.value,t,e)}function D(s,t){return s.operations.altitudeAt(s.value,t)}function g(s,t,e,n){return s.operations.setAltitudeAt(s.value,t,e,n)}function K(s,t,e,n){return t!==n&&M(n,t),x(a,n[12],n[13],n[14]),g(s,a,e,a),n[12]=a[0],n[13]=a[1],n[14]=a[2],n}function h(s,t,e){return s.operations.elevate(s.value,t,e.value)}const a=w();function st(s,t,e,n,i){return i[0]=f(s,t),i[1]=f(s,e),i[2]=f(s,n),i}function nt(s,t,e,n,i){d(e,s),d(l,t),B(l,l),m(n,l,e),m(i,n,e)}function it(s,t){return s?P(t):t.isGeographic?R.PlateCarree:t}const l=w();class p{constructor(t,e,n,i){this.viewingMode=t,this.spatialReference=e,this.unitInMeters=n,this._coordinateSystem=i,this._tmpCoordinateSystem=F(i),this.referenceEllipsoid=v(e),this.sphericalPCPF=P(e)}set extent(t){t&&I(this._coordinateSystem,t,this._coordinateSystem)}getAltitude(t){return D(this._coordinateSystem,t)}setAltitude(t,e,n=t){return g(this._coordinateSystem,n,e,t)}setAltitudeOfTransformation(t,e){K(this._coordinateSystem,e,t,e)}worldUpAtPosition(t,e){return H(this._coordinateSystem,t,e)}worldBasisAtPosition(t,e,n){return J(this._coordinateSystem,t,e,n)}basisMatrixAtPosition(t,e){const n=this.worldBasisAtPosition(t,c.X,o.get()),i=this.worldBasisAtPosition(t,c.Y,o.get()),r=this.worldBasisAtPosition(t,c.Z,o.get());return G(e,n[0],n[1],n[2],0,i[0],i[1],i[2],0,r[0],r[1],r[2],0,0,0,0,1),e}headingAtPosition(t,e){const n=this.worldUpAtPosition(t,o.get()),i=this.worldBasisAtPosition(t,c.Y,o.get()),r=k(e,i,n);return U(r)}intersectManifoldClosestSilhouette(t,e,n){return h(this._coordinateSystem,e,this._tmpCoordinateSystem),X(this._tmpCoordinateSystem,t,n),n}intersectManifold(t,e,n){h(this._coordinateSystem,e,this._tmpCoordinateSystem);const i=o.get();return W(this._tmpCoordinateSystem,t,i)?d(n,i):null}intersectInfiniteManifold(t,e,n){if(this.viewingMode===u.Global)return this.intersectManifold(t,e,n);h(this._coordinateSystem,e,this._tmpCoordinateSystem);const i=this._tmpCoordinateSystem.value,r=o.get();return Z(i.plane,t,r)?d(n,r):null}toRenderCoords(t,e,n){return _(t)?z(t,e,this.spatialReference):S(t,e,n,this.spatialReference)}fromRenderCoords(t,e,n=null){return _(e)?(n!=null&&(e.spatialReference=n),O(t,this.spatialReference,e)?e:null):S(t,this.spatialReference,e,n)?e:null}static create(t,e){switch(t){case u.Local:return new p(u.Local,e,L(e),q());case u.Global:return new p(u.Global,e,1,Y(e))}}static renderUnitScaleFactor(t,e){return y(t)/y(e)}}export{st as q,p as v,nt as w,it as z};
