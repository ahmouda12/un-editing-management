import{iY as w,iZ as y,bH as I,G as V,bF as l,aU as H,x as m,y as c,B as v}from"./index-DPJiPkbh.js";import"./GeometryUtils-CYtATAOa.js";import"./CIMSymbolHelper-Do5YMnYc.js";import"./enums-BRqP_wXA.js";import"./definitions-B54owTRu.js";import"./vec2f32-BbH2jxlN.js";import"./floatRGBA-CHZINRxm.js";import"./EffectView-DBKHGQIz.js";import"./DisplayObject-jRWssau_.js";import"./Container-D-UnjuYH.js";import"./WGLContainer-Dv5NxOAK.js";import"./vec4f32-CjrfB-0a.js";import"./Texture-BRxaK8g9.js";import"./enums-DSseSvdG.js";import"./Program-DCRJBPTx.js";import"./DefaultVertexAttributeLayouts-BBe0WA5l.js";import{e as g}from"./TileKey-BicQgvrV.js";import"./LabelMetric-BJcGSDIa.js";import"./StyleDefinition-pu9RBNlY.js";import"./enums-BRzLM11V.js";import"./MagnifierPrograms-CVMXRii8.js";import"./pbf-BAzJBNw5.js";import"./FeatureCommandQueue-D5rkXNyk.js";import"./OrderIndependentTransparency-Dar7ikM6.js";import"./interfaces-CGza0uBR.js";import"./testSVGPremultipliedAlpha-BaLE2eLV.js";import{$ as T}from"./GraphicsView2D-CQiay_dM.js";import"./earcut-nZVQjWaZ.js";import"./vec3f32-Cw9Q6TO_.js";import"./normalizeUtilsCommon-DTYpWx_K.js";import{r as q,o as f,n as d}from"./imageUtils-DF6RQXob.js";import{m as U}from"./LayerView2D-PBUj6K28.js";import{h as b}from"./HighlightGraphicContainer-dIBYk1N_.js";import{h as S,m as C,r as Q}from"./TileStrategy-Bs8uTjKa.js";import{u as F}from"./LayerView-DYVP3cuG.js";import{i as L}from"./RefreshableLayerView-TgkXS-ig.js";import{S as P,U as k}from"./MapServiceLayerViewHelper-NRExOe3T.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-CPCkP0Vo.js";import"./OptimizedGeometry-DLPswkPy.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./DefaultUI-y65bhLzJ.js";import"./ReactiveMap-sicXFvKD.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./heightModelInfoUtils-irmNrBgu.js";import"./mat2df64-CBKYtunK.js";import"./mat3-CakTilsz.js";import"./normalizeUtils-CVZirBXT.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./accessibleHandler-XhnTPGUg.js";import"./Compass-DbISr2nW.js";import"./utils-DsJqvptN.js";import"./GoTo-28s5bp4H.js";import"./NavigationToggle-DiUrJhDe.js";import"./Zoom-D-LKGxB_.js";import"./highlightReasons-C6XJZYBL.js";import"./Tile-C2x0ojRV.js";import"./quickselect-deeG3Iol.js";import"./BufferObject-wa67LmxE.js";import"./VertexArrayObject-BGsrrzff.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./WGLBrushVTLSymbol-BM1EGGpB.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-Idpt-hsH.js";import"./featureConversionUtils-DQOpYys3.js";import"./OptimizedFeature-CXeSoBCN.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./CircularArray-DfLrgW_-.js";import"./AttributeStore-DNuJKA2n.js";import"./UpdateTracking2D-Bx7nYhX8.js";import"./TurboLine-CEECPkhn.js";import"./BindType-BmZEZMMh.js";import"./Util-C76gCxal.js";import"./constants-D5zmR9t2.js";import"./labelFormatUtils-D6Y1wMdU.js";import"./centroid-DdLmOD72.js";import"./timeSupport-CgWQEL9f.js";import"./json-Wa8cmqdu.js";import"./ZoomMomentumEstimator-CGSDfs6t.js";import"./heatmapTextureUtils-CSQ77pgu.js";import"./QueueProcessor-DdpNWD80.js";import"./basicInterfaces-DngWxyLO.js";import"./normalizeUtilsSync-flSlqQpY.js";import"./Bitmap-8kVunml_.js";import"./TileContainer-CwVZt8Bm.js";import"./scaleUtils-C37jhR61.js";import"./ClipRect-Hx0McZSN.js";import"./AGraphicContainer-CGJW73Pm.js";import"./TechniqueInstance-XVKMxhdo.js";import"./sublayerUtils-DwYFfJ88.js";import"./popupUtils-DP5YqEgW.js";const G=[0,0];let p=class extends L(q(U(F))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new S(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new C({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r)}),this._tileStrategy=new Q({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),P(this,this.layer)){const e=this._highlightView=new T({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new b(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new k({createFetchPopupFeaturesQueryGeometry:(r,h)=>y(r,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,h)=>{e.graphicUpdateHandler({graphic:r,property:h})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):I()}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return V((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(G,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:h=0}=i;if(!e)try{return await this._fetchImage(t,r)}catch(s){if(!l(s)&&!this.resampling)return f(this._tileInfoView.tileInfo.size);if(h<3){const n=this._tileInfoView.getTileParentId(t.id);if(n){const u=new g(n),_=await this.fetchTile(u,{...i,resamplingLevel:h+1});return d(this._tileInfoView,_,u,t)}}throw s}const o=new g(0,0,0,0);let a;try{if(await e.fetchAvailabilityUpsample(t.level,t.row,t.col,o,{signal:r}),o.level!==t.level&&!this.resampling)return f(this._tileInfoView.tileInfo.size);a=await this._fetchImage(o,r)}catch(s){if(l(s))throw s;a=await this._fetchImage(t,r)}return this.resampling?d(this._tileInfoView,a,o,t):a}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){l(i)||H.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};m([c()],p.prototype,"resampling",null),m([c()],p.prototype,"tilemapCache",null),p=m([v("esri.views.2d.layers.TileLayerView2D")],p);const vi=p;export{vi as default};
