import{f as $,E as D,cX as O,ks as E,kt as P,bO as q,gn as G}from"./index-B252NKV0.js";import{d as k,f as A,h as B,o as H,R as J}from"./ElevationContext-0u_g65xQ.js";async function W(t,d,l,p,s){const{elevationProvider:f,renderCoordsHelper:i}=t,{elevationInfo:u}=d,{pointsInFeatures:b,spatialReference:g}=p,h=$.fromJSON(g),y=k(u,!0),m=await A(y,h,s);D(s);const c=[],e=new Set,o=new Set,a=new H,n=O(0,0,0,$.WGS84),r=new J,S=q();n.spatialReference=h;const j=t.elevationProvider.spatialReference??t.spatialReference;for(const{objectId:w,points:v}of b){const I=l(w);if(I==null){for(const R of v)c.push(R.z??0);e.add(w);continue}I.isDraped&&o.add(w);const z=I.graphic.geometry;a.setFromElevationInfo(E(z,u)),a.updateFeatureExpressionInfoContext(m,I.graphic,d);for(const{x:R,y:C,z:F}of v)n.x=R,n.y=C,n.z=F??0,await P(n,S,j,0,{signal:s}),B(S,f,a,i,r),c.push(r.z)}return{elevations:c,drapedObjectIds:o,failedObjectIds:e}}async function X(t,d,l){if(t==null||d.candidates.length===0)return x;const p=t.graphics3DGraphicsByObjectID??t.graphics3DGraphics,s=[],f=[],{renderer:i}=t,u=i!=null&&"arcadeRequired"in i&&i.arcadeRequired?G():null,b=async(e,{graphic:o,graphics3DSymbol:a})=>{const n=await u,r=await t.getRenderingInfoAsync(o,i,n,{signal:l});return r==null?[]:a.queryForSnapping(e,h,r,l)},{candidates:g,spatialReference:h}=d;for(let e=0;e<g.length;++e){const o=g[e],{objectId:a}=o,n=typeof a=="number"?p==null?void 0:p.get(a):void 0;if(n==null)continue;const{graphics3DSymbol:r}=n;r.symbologySnappingSupported&&(s.push(b(o,n)),f.push(e))}if(s.length===0)return x;const y=await Promise.all(s);D(l);const m=[],c=[];for(let e=0;e<y.length;++e){const o=y[e],a=f[e];for(const n of o)m.push(n),c.push(a)}return{candidates:m,sourceCandidateIndices:c}}const x={candidates:[],sourceCandidateIndices:[]};export{W as m,X as r};
