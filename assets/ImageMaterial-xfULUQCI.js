const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/ImageMaterial.glsl-CdWQTK8u.js","assets/index-B252NKV0.js","assets/index-HngaTkmj.css","assets/quat-3FyS98Fp.js","assets/RenderObject-C6saBYAt.js","assets/hydratedFeatures-BRhOD9YG.js","assets/ColorMaterial.glsl-9YKbkIUs.js","assets/mat3-DPPMYMhB.js","assets/BufferView-DithrMUX.js","assets/IntegerPassUniform-BV9MAEur.js","assets/enums-DSseSvdG.js","assets/Texture-BT-WYJiR.js","assets/BindType-BmZEZMMh.js","assets/interfaces-CGza0uBR.js","assets/Util-DsJryf9x.js","assets/VertexAttribute-BnAa5VW0.js","assets/basicInterfaces-DngWxyLO.js","assets/ShaderTechniqueConfiguration-Ba2Oo7i0.js","assets/doublePrecisionUtils-B0owpBza.js","assets/Material-5cwIpifF.js","assets/ContentObject-BZXFh7BC.js","assets/requestImageUtils-DzTga_rS.js","assets/InterleavedLayout-DjPFAyuB.js","assets/types-D0PSWh4d.js","assets/VertexColor.glsl-D4WHfTL4.js","assets/OrderIndependentTransparency-Dar7ikM6.js","assets/ElevationContext-0u_g65xQ.js","assets/axisAngleDegrees-C5xDLED1.js","assets/weather-BLxro0E8.js","assets/RenderState-DaVlEYWY.js","assets/NestedMap-DgiGbX8E.js","assets/frustum-VM_sBTPR.js","assets/Attribute-B-NAci_J.js","assets/Geometry-Ba4xjwln.js","assets/Indices-BSZ2vHzt.js","assets/triangle-BvzaHny8.js","assets/lineSegment-BMYSACYW.js","assets/Octree-C_vy2cBS.js","assets/floatRGBA-0vmpOgzj.js","assets/Intersector-DFmhN7LU.js","assets/ElevationProvider-Z72XcWTz.js","assets/boundedPlane-YCrsjrS8.js","assets/verticalOffsetUtils-Byw9d5zq.js","assets/orientedBoundingBox-B61nPEal.js","assets/spatialReferenceEllipsoidUtils-DV15qcib.js","assets/computeTranslationToOriginAndRotation-BwxvMbbc.js","assets/glUtil-DS73TAjp.js","assets/VertexElementDescriptor-BOD-G50G.js","assets/VertexArrayObject-adc8SYn-.js","assets/BufferObject-DdM-Y0w0.js","assets/Scheduler-D2EdV-K_.js","assets/debugFlags-BYwEz_hP.js","assets/vec3f32-Cw9Q6TO_.js","assets/DoubleArray-DydFqj4b.js","assets/ray-DAW-uzC6.js","assets/interfaces-D6pIddIh.js","assets/SlicePlane-B1lWu6fA.js","assets/persistable-B0Qw3aes.js","assets/multiOriginJSONSupportUtils-C0wm8_Yw.js","assets/resourceExtension-Vp_HFlZe.js","assets/LineVisualElement-BSXibN39.js","assets/Object3DVisualElement-CzChDDaI.js","assets/VisualElement-Cncb_nzH.js","assets/line-MrNX-P16.js","assets/triangulationUtils-B5WoxWgr.js","assets/earcut-gCDAS0gj.js","assets/deduplicate-aiEVsYi-.js","assets/DefaultLayouts-C3Py-gzy.js","assets/RenderCoordsHelper-D0uwfR3O.js","assets/projectVectorToPoint-C5fA5x6U.js"])))=>i.map(i=>d[i]);
import{y as $}from"./BufferView-DithrMUX.js";import{o as I,d as A,P as O,a as S,s as b,b as x,c as l,e as E,f as D,g as C,h as w,r as N,i as R,j as V,k as L,l as F,A as f,m as g,n as M}from"./IntegerPassUniform-BV9MAEur.js";import{e as v}from"./basicInterfaces-DngWxyLO.js";import{o as U,u as B,r as z,d as G,A as W}from"./VertexColor.glsl-D4WHfTL4.js";import{u as j}from"./Material-5cwIpifF.js";import{o as u,s as H,S as k,A as q,h as Q,l as J,a as K,E as X,_ as Y,b as Z,c as tt}from"./OrderIndependentTransparency-Dar7ikM6.js";import{s as et}from"./Util-DsJryf9x.js";import{e as p}from"./VertexAttribute-BnAa5VW0.js";import{c as st}from"./DefaultLayouts-C3Py-gzy.js";import{e as at}from"./ColorMaterial.glsl-9YKbkIUs.js";import{x as i,_ as rt}from"./index-B252NKV0.js";import{o as c}from"./interfaces-CGza0uBR.js";import{r as o}from"./ShaderTechniqueConfiguration-Ba2Oo7i0.js";import{R as y}from"./enums-DSseSvdG.js";function it(s){const t=new I,{vertex:e,fragment:a}=t;return A(e,s),t.include(U,s),t.attributes.add(p.POSITION,"vec3"),t.attributes.add(p.UV0,"vec2"),s.perspectiveInterpolation&&t.attributes.add(p.PERSPECTIVEDIVIDE,"float"),t.varyings.add("vpos","vec3"),s.multipassEnabled&&t.varyings.add("depth","float"),e.code.add(c`
    void main(void) {
      vpos = position;
      ${s.multipassEnabled?"depth = (view * vec4(vpos, 1.0)).z;":""}
      vTexCoord = uv0;
      gl_Position = transformPosition(proj, view, vpos);

      ${s.perspectiveInterpolation?"gl_Position *= perspectiveDivide;":""}
    }
  `),t.include(O,s),t.include(S,s),a.uniforms.add(new b("tex",n=>n.texture),new x("opacity",n=>n.opacity)),t.varyings.add("vTexCoord","vec2"),s.output===l.Alpha?a.code.add(c`
    void main() {
      discardBySlice(vpos);
      ${s.multipassEnabled?"terrainDepthTest(depth);":""}

      float alpha = texture(tex, vTexCoord).a * opacity;
      if (alpha  < ${c.float(E)}) {
        discard;
      }

      fragColor = vec4(alpha);
    }
    `):(a.include(D),a.code.add(c`
    void main() {
      discardBySlice(vpos);
      ${s.multipassEnabled?"terrainDepthTest(depth);":""}
      fragColor = texture(tex, vTexCoord) * opacity;

      if (fragColor.a < ${c.float(E)}) {
        discard;
      }

      fragColor = highlightSlice(fragColor, vpos);
      ${s.transparencyPassType===u.Color?"fragColor = premultiplyAlpha(fragColor);":""}
    }
    `)),t}const ot=Object.freeze(Object.defineProperty({__proto__:null,build:it},Symbol.toStringTag,{value:"Module"}));class _ extends N{initializeProgram(t){return new R(t.rctx,_.shader.get().build(this.configuration),T)}_setPipelineState(t,e){const a=this.configuration,n=t===u.NONE,d=t===u.FrontFace;return k({blending:a.output!==l.Color&&a.output!==l.Alpha||!a.transparent?null:n?nt:q(t),culling:Q(a.cullFace),depthTest:{func:J(t)},depthWrite:n?a.writeDepth?K:null:X(t),colorWrite:Y,stencilWrite:a.hasOccludees?V:null,stencilTest:a.hasOccludees?e?L:F:null,polygonOffset:n||d?null:Z(a.enableOffset)})}initializePipeline(){return this._occludeePipelineState=this._setPipelineState(this.configuration.transparencyPassType,!0),this._setPipelineState(this.configuration.transparencyPassType,!1)}getPipeline(t){return t?this._occludeePipelineState:super.getPipeline()}}_.shader=new w(ot,()=>rt(()=>import("./ImageMaterial.glsl-CdWQTK8u.js").then(s=>s.D),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69])));const nt=H(y.ONE,y.ONE_MINUS_SRC_ALPHA);class r extends C{constructor(){super(...arguments),this.output=l.Color,this.cullFace=v.None,this.hasSlicePlane=!1,this.transparent=!1,this.enableOffset=!0,this.writeDepth=!0,this.hasOccludees=!1,this.transparencyPassType=u.NONE,this.multipassEnabled=!1,this.cullAboveGround=!1,this.perspectiveInterpolation=!0}}i([o({count:l.COUNT})],r.prototype,"output",void 0),i([o({count:v.COUNT})],r.prototype,"cullFace",void 0),i([o()],r.prototype,"hasSlicePlane",void 0),i([o()],r.prototype,"transparent",void 0),i([o()],r.prototype,"enableOffset",void 0),i([o()],r.prototype,"writeDepth",void 0),i([o()],r.prototype,"hasOccludees",void 0),i([o({count:u.COUNT})],r.prototype,"transparencyPassType",void 0),i([o()],r.prototype,"multipassEnabled",void 0),i([o()],r.prototype,"cullAboveGround",void 0),i([o()],r.prototype,"perspectiveInterpolation",void 0),i([o({constValue:!1})],r.prototype,"occlusionPass",void 0);const T=new Map([[p.POSITION,0],[p.UV0,2],[p.PERSPECTIVEDIVIDE,3]]);class At extends at{constructor(t){super(t,new ct),this.supportsEdges=!0,this.produces=new Map([[f.OPAQUE_MATERIAL,e=>e===l.Highlight||g(e)&&!this.parameters.transparent],[f.TRANSPARENT_MATERIAL,e=>g(e)&&this.parameters.transparent&&this.parameters.writeDepth],[f.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL,e=>g(e)&&this.parameters.transparent&&!this.parameters.writeDepth],[f.DRAPED_MATERIAL,e=>M(e)]]),this._vertexAttributeLocations=T,this._configuration=new r}getConfiguration(t,e){return this._configuration.output=t,this._configuration.cullFace=this.parameters.cullFace,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.hasOccludees=this.parameters.hasOccludees,this._configuration.transparencyPassType=e.transparencyPassType,this._configuration.enableOffset=e.camera.relativeElevation<tt,this._configuration.multipassEnabled=e.multipassEnabled,this._configuration.cullAboveGround=e.multipassTerrain.cullAboveGround,this._configuration.perspectiveInterpolation=this.parameters.perspectiveInterpolation,this._configuration}createGLMaterial(t){return new pt(t)}createBufferWriter(){const t=st.clone();return this.parameters.perspectiveInterpolation&&t.f32(p.PERSPECTIVEDIVIDE),new lt(t)}}class pt extends B{constructor(t){super({...t,...t.material.parameters})}_updateParameters(t){return this.updateTexture(this._material.parameters.textureId),this._material.setParameters(this.textureBindParameters),this.ensureTechnique(_,t)}_updateOccludeeState(t){t.hasOccludees!==this._material.parameters.hasOccludees&&(this._material.setParameters({hasOccludees:t.hasOccludees}),this._updateParameters(t))}beginSlot(t){return this._output!==l.Color&&this._output!==l.Alpha||this._updateOccludeeState(t),this._updateParameters(t)}}class lt extends z{write(t,e,a,n,d){for(const h of this.vertexBufferLayout.fields.keys()){const m=a.attributes.get(h);if(m)if(h===p.PERSPECTIVEDIVIDE){et(m.size===1);const P=n.getField(h,$);P&&G(m,P,d)}else W(h,m,t,e,n,d)}}}class ct extends j{constructor(){super(...arguments),this.transparent=!1,this.writeDepth=!0,this.hasSlicePlane=!1,this.cullFace=v.None,this.hasOccludees=!1,this.opacity=1,this.textureId=null,this.initTextureTransparent=!0,this.perspectiveInterpolation=!1}}export{At as T,it as v};
