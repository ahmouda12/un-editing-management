import{x as t,y as r,B as v,z as w,s as c,r as y,t as f,u as g,v as j}from"./index-DPJiPkbh.js";import{r as B}from"./serverVersionUtils-Bru5WZNk.js";let o=class extends w{constructor(e){super(e),this.hasConflicts=!1,this.moment=null,this.didPost=!1,this.success=!1}};t([r({type:Boolean,json:{write:!0}})],o.prototype,"hasConflicts",void 0),t([r({type:Date,json:{type:Number,write:{writer:(e,s)=>{s.moment=e?e.getTime():null}}}})],o.prototype,"moment",void 0),t([r({type:Boolean,json:{write:!0}})],o.prototype,"didPost",void 0),t([r({type:Boolean,json:{write:!0}})],o.prototype,"success",void 0),o=t([v("esri.rest.versionManagement.gdbVersion.support.ReconcileResult")],o);const q=o,n=new Map;async function M(e,s,p,l){n.has(e)||await B(n,e);const i=n.get(e);if(((i==null?void 0:i.serverVersion)??0)<=11.1)throw new c("reconcile:enterprise-version","versioning API requires ArcGIS Enterprise version 11.2 or higher");if(!s)throw new c("reconcile:missing-guid","guid for version is missing");const a=y(e),h=p.toJSON(),u=f(a.query,{query:g({...h,f:"json"}),...l,method:"post"});s.startsWith("{")&&(s=s.slice(1,-1));const m=`${a.path}/versions/${s}/reconcile`,{data:d}=await j(m,u);return q.fromJSON(d)}export{M as reconcile,n as serverVersionCacheMap};
