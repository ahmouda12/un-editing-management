import{cR as a,s as h,cE as d,bH as y,bb as u,x as s,y as p,B as _}from"./index-DPJiPkbh.js";import{n as f,X as g}from"./FeatureLayerView2D-CPJ94Yo_.js";import{r as v}from"./StreamLayerView-CNx3wZ-g.js";import"./EffectView-DBKHGQIz.js";import"./highlightReasons-C6XJZYBL.js";import"./Tile-C2x0ojRV.js";import"./quickselect-deeG3Iol.js";import"./TileKey-BicQgvrV.js";import"./LayerView2D-PBUj6K28.js";import"./scaleUtils-C37jhR61.js";import"./Container-D-UnjuYH.js";import"./DefaultUI-y65bhLzJ.js";import"./ReactiveMap-sicXFvKD.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./heightModelInfoUtils-irmNrBgu.js";import"./mat2df64-CBKYtunK.js";import"./mat3-CakTilsz.js";import"./vec2f32-BbH2jxlN.js";import"./normalizeUtils-CVZirBXT.js";import"./normalizeUtilsCommon-DTYpWx_K.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./accessibleHandler-XhnTPGUg.js";import"./Compass-DbISr2nW.js";import"./utils-DsJqvptN.js";import"./GoTo-28s5bp4H.js";import"./NavigationToggle-DiUrJhDe.js";import"./Zoom-D-LKGxB_.js";import"./DisplayObject-jRWssau_.js";import"./definitions-B54owTRu.js";import"./enums-DSseSvdG.js";import"./Texture-BRxaK8g9.js";import"./ClipRect-Hx0McZSN.js";import"./TechniqueInstance-XVKMxhdo.js";import"./UpdateTracking2D-Bx7nYhX8.js";import"./TurboLine-CEECPkhn.js";import"./enums-BRqP_wXA.js";import"./earcut-nZVQjWaZ.js";import"./GeometryUtils-CYtATAOa.js";import"./OptimizedGeometry-DLPswkPy.js";import"./CIMSymbolHelper-Do5YMnYc.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-CPCkP0Vo.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./LabelMetric-BJcGSDIa.js";import"./Program-DCRJBPTx.js";import"./BufferObject-wa67LmxE.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BindType-BmZEZMMh.js";import"./Util-C76gCxal.js";import"./constants-D5zmR9t2.js";import"./TileContainer-CwVZt8Bm.js";import"./WGLContainer-Dv5NxOAK.js";import"./VertexArrayObject-BGsrrzff.js";import"./WGLBrushVTLSymbol-BM1EGGpB.js";import"./vec4f32-CjrfB-0a.js";import"./StyleDefinition-pu9RBNlY.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-Idpt-hsH.js";import"./DefaultVertexAttributeLayouts-BBe0WA5l.js";import"./featureConversionUtils-DQOpYys3.js";import"./OptimizedFeature-CXeSoBCN.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./TileStrategy-Bs8uTjKa.js";import"./QueueProcessor-DdpNWD80.js";import"./tileUtils-B7X19rIS.js";import"./featureReductionUtils-Caulfaw_.js";import"./SDFHelper-B0DKQAgW.js";import"./floatRGBA-CHZINRxm.js";import"./FeatureCommandQueue-D5rkXNyk.js";import"./heatmapTextureUtils-CSQ77pgu.js";import"./HighlightCounter-CqR9g7Xx.js";import"./FeatureLayerView-rpO-T8eu.js";import"./popupUtils-DP5YqEgW.js";import"./LayerView-DYVP3cuG.js";import"./RefreshableLayerView-TgkXS-ig.js";let r=class extends v(g){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([a(()=>this.layer.customParameters,e=>this._worker.streamMessenger.updateCustomParameters(e)),this.layer.on("send-message-to-socket",e=>this._worker.streamMessenger.sendMessageToSocket(e)),this.layer.on("send-message-to-client",e=>{this._worker.streamMessenger.sendMessageToClient(e),this._isUserPaused&&"type"in e&&e.type==="clear"&&this.incrementSourceRefreshVersion()}),a(()=>this.layer.purgeOptions,()=>this._update()),a(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new h("stream-controller",this.pipelineErrorString):null}on(e,i){if(Array.isArray(e))return d(e.map(m=>this.on(m,i)));const t=["data-received","message-received"].includes(e);t&&this._worker.streamMessenger.enableEvent(e,!0);const n=super.on(e,i),o=this;return y(()=>{n.remove(),t&&(o._worker.closed||o.hasEventListener(e)||o._worker.streamMessenger.enableEvent(e,!1))})}queryLatestObservations(e,i){var t,n,o;if(!((t=this.layer.timeInfo)!=null&&t.endField||(n=this.layer.timeInfo)!=null&&n.startField||(o=this.layer.timeInfo)!=null&&o.trackIdField))throw new h("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return f(this._worker.features.executeQueryForLatestObservations(this._cleanUpQuery(e),i).then(m=>{const l=u.fromJSON(m);return l.features.forEach(c=>{c.layer=this.layer,c.sourceLayer=this.layer}),l}),new u({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){this._refreshInterval!=null&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this._worker.streamMessenger.disconnect(),this._doPause()}_doConnect(){this._worker.streamMessenger.connect(),this.resume()}_doClear(){this._worker.streamMessenger.clear(),this._refreshInterval==null&&this.incrementSourceRefreshVersion()}_createClientOptions(){const e=super._createClientOptions(),i=this;return{...e,get container(){return i.featureContainer},setProperty:t=>{this.set(t.propertyName,t.value)}}}};s([p()],r.prototype,"pipelineConnectionStatus",void 0),s([p()],r.prototype,"pipelineErrorString",void 0),s([p({readOnly:!0})],r.prototype,"connectionError",null),s([p({readOnly:!0})],r.prototype,"_streamConnectionStatus",null),r=s([_("esri.views.2d.layers.StreamLayerView2D")],r);const Be=r;export{Be as default};
