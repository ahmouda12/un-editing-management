import{E as z,c$ as V,qg as A,eN as O,aJ as E,s as U,w as F,cR as G,eT as W,is as j,cS as Z,eP as H,x as d,y as u,B as K}from"./index-B252NKV0.js";import{t as Y}from"./DefaultUI-4DBz9mkp.js";import{n as J,e as Q,l as X,h as tt,t as et}from"./TileInfoViewPOT-CCfY2T1U.js";import{r as it,s as rt,d as ot}from"./RenderableTile-DtAne7GO.js";import{i as R,a as g}from"./StyleDefinition-pu9RBNlY.js";import{e as st}from"./TileKey-Dt_FQSdw.js";import{u as lt,f as at,s as nt,n as mt,d as pt}from"./WGLBrushVTLSymbol---yR8o1P.js";import{p as ht}from"./VTLMaterialManager-B10yUbF1.js";import{O as ct,R as L}from"./enums-DSseSvdG.js";import{l as P}from"./StyleRepository-BvqU3Hl4.js";import{n as dt}from"./LayerView3D-7HzYlANA.js";import{c as ut}from"./TiledLayerView3D-CCbuIgXo.js";import{k as gt,M as yt}from"./terrainUtils-uYCMkPpW.js";import{u as ft}from"./LayerView-D2pvr0Q6.js";import"./ReactiveMap-DcQhQdHv.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./heightModelInfoUtils-CYfboRg2.js";import"./mat2df64-CBKYtunK.js";import"./mat3-DPPMYMhB.js";import"./vec2f32-BbH2jxlN.js";import"./normalizeUtils-PvjooRb6.js";import"./normalizeUtilsCommon-ByXMGwNF.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./accessibleHandler-yeijlTke.js";import"./Compass-BqUvL1gL.js";import"./utils-DsJqvptN.js";import"./GoTo-B08Csiw_.js";import"./NavigationToggle-DNdSP6VQ.js";import"./Zoom-BQUhauBk.js";import"./Rect-CUzevAry.js";import"./Texture-BT-WYJiR.js";import"./pbf-dp1_jIdk.js";import"./rasterizingUtils-QWBYkJSI.js";import"./floatRGBA-0vmpOgzj.js";import"./constants-D5zmR9t2.js";import"./config-MDUrh2eL.js";import"./TileInfo-Cj0aaJ6S.js";import"./TileKey-DZd6gJy7.js";import"./TileStrategy-l1611y-Q.js";import"./QueueProcessor-CvAp86Lk.js";import"./enums-BRzLM11V.js";import"./GeometryUtils-BvoQHMVi.js";import"./BufferObject-DdM-Y0w0.js";import"./VertexArrayObject-adc8SYn-.js";import"./DefaultVertexAttributeLayouts-o8Fw2Bif.js";import"./DisplayObject-B2mbaom_.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./enums-BRqP_wXA.js";import"./vec4f32-CjrfB-0a.js";import"./definitions-B54owTRu.js";import"./ShaderCompiler-G2XYGDs6.js";import"./programUtils-CwiKxPbA.js";import"./unitBezier-BX6NeAEr.js";import"./WaterSurface.glsl-DJiRVkTI.js";import"./Scheduler-D2EdV-K_.js";import"./debugFlags-BYwEz_hP.js";import"./RenderState-DaVlEYWY.js";import"./ElevationContext-0u_g65xQ.js";import"./Material-5cwIpifF.js";import"./interfaces-CGza0uBR.js";import"./basicInterfaces-DngWxyLO.js";import"./ContentObject-BZXFh7BC.js";import"./VertexAttribute-BnAa5VW0.js";import"./Util-DsJryf9x.js";import"./IntegerPassUniform-BV9MAEur.js";import"./BindType-BmZEZMMh.js";import"./ShaderTechniqueConfiguration-Ba2Oo7i0.js";import"./doublePrecisionUtils-B0owpBza.js";import"./requestImageUtils-DzTga_rS.js";import"./axisAngleDegrees-C5xDLED1.js";import"./quat-3FyS98Fp.js";import"./weather-BLxro0E8.js";import"./NestedMap-DgiGbX8E.js";import"./frustum-VM_sBTPR.js";import"./Attribute-B-NAci_J.js";import"./Geometry-Ba4xjwln.js";import"./Indices-BSZ2vHzt.js";import"./triangle-BvzaHny8.js";import"./lineSegment-BMYSACYW.js";import"./Octree-C_vy2cBS.js";import"./InterleavedLayout-DjPFAyuB.js";import"./BufferView-DithrMUX.js";import"./types-D0PSWh4d.js";import"./OrderIndependentTransparency-Dar7ikM6.js";import"./Intersector-DFmhN7LU.js";import"./ElevationProvider-Z72XcWTz.js";import"./boundedPlane-YCrsjrS8.js";import"./verticalOffsetUtils-Byw9d5zq.js";import"./orientedBoundingBox-B61nPEal.js";import"./spatialReferenceEllipsoidUtils-DV15qcib.js";import"./computeTranslationToOriginAndRotation-BwxvMbbc.js";import"./glUtil-DS73TAjp.js";import"./vec3f32-Cw9Q6TO_.js";import"./DoubleArray-DydFqj4b.js";import"./hydratedFeatures-BRhOD9YG.js";import"./ColorMaterial.glsl-9YKbkIUs.js";import"./VertexColor.glsl-D4WHfTL4.js";import"./dehydratedFeatures-Dt-SjqTC.js";import"./featureConversionUtils-BVsMNPzF.js";import"./OptimizedFeature-CXeSoBCN.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./OptimizedGeometry-DLPswkPy.js";import"./edgeUtils-M6KOVtH3.js";import"./earcut-gCDAS0gj.js";import"./vec3-DPfuEKPJ.js";import"./SnappingCandidate-O5eRSE6e.js";import"./triangulationUtils-B5WoxWgr.js";import"./deduplicate-aiEVsYi-.js";import"./Normals-C_NhLO8Y.js";import"./RealisticTree.glsl-CwQ9Or_P.js";import"./DefaultMaterial_COLOR_GAMMA-DpjIaYJf.js";import"./resourceUtils-BT8kUm1Z.js";import"./symbolColorUtils-D89hqBDM.js";import"./CIMSymbolHelper-ZEeHC0zq.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-oEBemou-.js";import"./BoundingBox-BhuXqU4L.js";import"./line-MrNX-P16.js";import"./projectVectorToPoint-C5fA5x6U.js";import"./MeshComponent-Vga6qE-G.js";import"./imageUtils-LnXySzmN.js";import"./meshVertexSpaceUtils-gkGG_eew.js";import"./MeshLocalVertexSpace-BNetD1iK.js";import"./georeference-TQxFGYYy.js";import"./interfaces-DkjgzG8v.js";import"./DefaultLayouts-C3Py-gzy.js";import"./Intersector-Cp54otHo.js";import"./EdgeShader.glsl-B6xvxs0N.js";import"./RenderCoordsHelper-D0uwfR3O.js";import"./scaleUtils-BKVOuLFd.js";import"./viewpointUtils-QCB8ouyq.js";import"./earthUtils-DV53znm3.js";import"./spatialReferenceSupport-7FaIbiiv.js";import"./ElevationSamplerData-CLGqTcb_.js";import"./Environment-CdSNjorT.js";import"./projectPointToWGS84ComparableLonLat-JSQbLxiZ.js";import"./Program-wFflZSL5.js";import"./ShadowCastVisualizeTechniqueConfiguration-Cw3UK_Yj.js";import"./ray-DAW-uzC6.js";import"./ZoomMomentumEstimator-gQBuScvi.js";import"./labelFormatUtils-H994QWFK.js";import"./FeatureTileDescriptor3D-DHCjGIg_.js";import"./ElevationQueryTileCache-BKuK8tEK.js";import"./LayerConstants-B33OP6sh.js";import"./ElevationRange-BrgM1moX.js";import"./geometryServiceUtils-DQSAcvNz.js";import"./LercDecoder-DU0V7Jru.js";import"./WorkerHandle-CzrOFJZz.js";import"./rasterUtils-Cy3YcRxv.js";import"./resources-DHuiDxSF.js";import"./edgeProcessing-y5myZLSQ.js";import"./EdgeWorkerHandle-BwQg52ff.js";import"./workerHelper-DtT1uotp.js";import"./testSVGPremultipliedAlpha-BWu01myj.js";import"./RenderingContext-WP9tAZpV.js";import"./ProgramCache-pF_7Wga5.js";class _t{constructor(t,e,r){this._scale=t,this._shift=e,this._levelShift=r}getLevelRowColumn(t){const e=this.getLevelShift(t[0]),r=this._shift+e;return r?[t[0]-e,t[1]>>r,t[2]>>r]:t}getLevelShift(t){return Math.min(t,this._levelShift)}getOffset(t,e){let r=0,s=0;const o=this._shift+this.getLevelShift(t[0]);if(o){const i=(1<<o)-1,l=e/(this._scale*(1<<o-1));r=(t[2]&i)*l,s=(t[1]&i)*l}return[r,s]}getScale(t){return this._scale*(1<<this._shift+this.getLevelShift(t))}}function vt(a){const t=[],e=new J(4096,t,()=>{const s=new rt;return s.show=!1,s.parts.push({startTime:0,startOpacity:0,targetOpacity:0,show:!1}),s.parts.push({startTime:0,startOpacity:0,targetOpacity:0,show:!1}),s}),r=new Q(t,e,(s,o,i)=>new X(s,o,i,a.styleRepository,a.key.level,0),(s,o)=>{it(s,o,!1)},()=>0,s=>{const o=a.styleRepository.getStyleLayerByUID(s).getLayoutProperty("visibility");return!o||o.getValue()!==R.NONE});t.push(a),e.add(a),r.setScreenSize(512,512),r.continue(1/0)}class B extends tt{constructor(t,e,r,s){super(t,e,r,t.tileInfo.lods.length-1),this._memCache=s,this._ongoingTileRequests=new Map,this._ongoingRequestToController=new Map,this._tileInfoView=new et(t.tileInfo,t.fullExtent)}destroy(){super.destroy(),this._ongoingRequestToController.forEach(t=>t.abort()),this._ongoingRequestToController.clear(),this._ongoingTileRequests.clear()}async getVectorTile(t,e,r,s){const o=new st(t,e,r,0);let i=this._memCache.get(o.id);if(i!=null)return i.retain(),i;const l=await this._getVectorTileData(o);if(z(s),!this._layer)return null;if(i=this._memCache.get(o.id),i!=null)return i.retain(),i;const n=this._layer.tileInfo.getTileBounds(V(),o),h=this._tileInfoView.getTileResolution(t);return i=new ot(o,h,n[0],n[3],512,512,this._styleRepository,this._memCache),l?(i.setData(l),i.retain(),this._memCache.put(o.id,i,i.usedMemory,A)):i.setData(null),i.neededForCoverage=!0,i.transforms.tileUnitsToPixels=Y(1/8,0,0,0,1/8,0,0,0,1),vt(i),i}_getVectorTileData(t){const e=t.id;if(this._ongoingTileRequests.has(e))return this._ongoingTileRequests.get(e);const r=new AbortController,s={signal:r.signal},o=this._getParsedVectorTileData(t,s).then(i=>(this._ongoingTileRequests.delete(e),this._ongoingRequestToController.delete(e),i)).catch(()=>(this._ongoingTileRequests.delete(e),this._ongoingRequestToController.delete(e),null));return this._ongoingTileRequests.set(e,o),this._ongoingRequestToController.set(e,r),o}_getParsedVectorTileData(t,e){return this.fetchTileData(t,e).then(r=>this.parseTileData({key:t,data:r},e))}}const Ct={vtlBackground:lt,vtlFill:at,vtlLine:nt,vtlCircle:mt,vtlSymbol:pt},_=1e-6;class D{constructor(t,e){this.spriteMosaic=t,this.glyphMosaic=e,this._brushCache=new Map,this._vtlMaterialManager=new ht}dispose(){this._brushCache&&(this._brushCache.forEach(t=>t.dispose()),this._brushCache=null),this._vtlMaterialManager=O(this._vtlMaterialManager),this.spriteMosaic.dispose(),this.glyphMosaic.dispose()}get vectorTilesMaterialManager(){return this._vtlMaterialManager}drawSymbols(t,e,r){const s=r.layers;t.renderPass="translucent";for(let o=0;o<s.length;o++){const i=s[o];if(i.type!==g.SYMBOL)continue;const l=i.getLayoutProperty("visibility");if(l&&l.getValue()===R.NONE)continue;const n=t.displayLevel;i.minzoom!==void 0&&i.minzoom>n+_||i.maxzoom!==void 0&&i.maxzoom<=n-_||(t.styleLayerUID=i.uid,t.styleLayer=i,this._drawWithBrush(t,e,"vtlSymbol"))}}drawBackground(t,e,r){if(r.backgroundBucketIds.length===0)return;const{context:s,displayLevel:o,requiredLevel:i}=t;e.key.level=i,s.setBlendingEnabled(!0),s.setDepthTestEnabled(!1),s.setStencilTestEnabled(!1),t.renderPass="background",r.backgroundBucketIds.forEach(l=>{const n=r.getLayerById(l);if(n.type!==g.BACKGROUND)return;const h=n.getLayoutProperty("visibility");h&&h.getValue()===R.NONE||n.minzoom!==void 0&&n.minzoom>o+_||n.maxzoom!==void 0&&n.maxzoom<=o-_||(t.styleLayerUID=n.uid,t.styleLayer=n,this._drawWithBrush(t,e,"vtlBackground"))})}drawTile(t,e,r,s){const{context:o}=t,i=r.layers;o.setBlendingEnabled(!1),o.setDepthTestEnabled(!0),o.setDepthWriteEnabled(!0),o.setDepthFunction(ct.LEQUAL),t.renderPass="opaque";for(let l=i.length-1;l>=0;l--){const n=i[l];s!=null&&s!==n.type||this._renderStyleLayer(n,t,e,!1)}o.setDepthWriteEnabled(!1),o.setBlendingEnabled(!0),o.setBlendFunctionSeparate(L.ONE,L.ONE_MINUS_SRC_ALPHA,L.ONE,L.ONE_MINUS_SRC_ALPHA),t.renderPass="translucent";for(let l=0;l<i.length;l++){const n=i[l];s!=null&&s!==n.type||this._renderStyleLayer(n,t,e,!1)}o.setDepthTestEnabled(!1),o.bindVAO()}_renderStyleLayer(t,e,r,s){if(!(s||t&&r.layerData.has(t.uid)))return;const o=t.getLayoutProperty("visibility");if(o&&o.getValue()===R.NONE)return;const{renderPass:i}=e;let l;switch(t.type){case g.BACKGROUND:if(i!=="background")return;l="vtlBackground";break;case g.FILL:if(i!=="opaque"&&e.renderPass!=="translucent")return;l="vtlFill";break;case g.LINE:if(i!=="translucent")return;l="vtlLine";break;case g.CIRCLE:if(i!=="translucent")return;l="vtlCircle";break;case g.SYMBOL:if(i!=="translucent")return;l="vtlSymbol"}const n=e.displayLevel;if(t.minzoom!==void 0&&t.minzoom>n+_||t.maxzoom!==void 0&&t.maxzoom<=n-_)return;const{context:h}=e;h.setStencilTestEnabled(!1),h.setStencilWriteMask(0),e.styleLayerUID=t.uid,e.styleLayer=t,this._drawWithBrush(e,r,l)}_drawWithBrush(t,e,r){if(!this._brushCache.has(r)){const s=Ct[r];this._brushCache.set(r,new s)}this._brushCache.get(r).drawMany(t,[e])}}let p=class extends ut(dt(ft)){constructor(){super(...arguments),this._tileHandlerController=null,this.type="vector-tile-3d",this.levelShift=E("disable-feature:vtl-level-shift")?0:1}initialize(){if(this.layer.fullExtent==null)return void this.addResolvingPromise(Promise.reject(new U("vectortilelayerview:full-extent-undefined","This layer view's layer does not define a fullExtent.")));const{basemapTerrain:a,spatialReference:t,state:e,viewingMode:r}=this.view,s=r==="local"&&!gt(t)||yt.force512VTL,o=this.layer.tileInfo.spatialReference.isGeographic,i=s?this.layer.tileInfo:this.layer.tileInfo.getOrCreateCompatible(256,o?1:2),l=this._getTileInfoSupportError(i,this.layer.fullExtent);if(l!=null)return this.addResolvingPromise(Promise.reject(l));const n=F(()=>{var m,c;return(c=(m=this.view)==null?void 0:m.basemapTerrain)==null?void 0:c.tilingSchemeLocked}).then(()=>{var w,v,M;const m=a.tilingScheme,c=m.pixelSize,b=c===256?1:2,y=(w=a.spatialReference)!=null&&w.isGeographic&&c===256?1:0,C=(v=a.spatialReference)!=null&&v.isGeographic||c!==256?0:1;let f;if(this.schemaHelper=new _t(b,y,this.levelShift+C),c===256){const N=this.layer.tileInfo.spatialReference.isGeographic;f=this.layer.tileInfo.getOrCreateCompatible(256,N?1:2)}else f=(M=this.view.spatialReference)!=null&&M.isGeographic?this.layer.tileInfo.getOrCreateCompatible(512,.5):this.layer.tileInfo;const S=this._getTileInfoCompatibilityError(f,m);if(S)throw S;this.tileInfo=f});this._tileHandlerController=new AbortController;const h=this.view.resourceController;this._memCache=h.memoryController.newCache(`vtl-${this.layer.uid}`,m=>{m.release()}),this.addHandles(G(()=>this.view.qualitySettings.memoryLimit,m=>this._memCache.maxSize=Math.ceil(m/10*1048576),W));const k=new P(this.layer.currentStyleInfo.style);this._tileHandler=new B(this.layer,k,e.contentPixelRatio,this._memCache);const T=this._tileHandlerController.signal,x=St(h),I=this._tileHandler.start({signal:T,schedule:x}),$=this._tileHandler.spriteMosaic;$.then(m=>{!j(T)&&this._tileHandler&&(this.painter=new D(m,this._tileHandler.glyphMosaic))}),I.then(()=>this._tileHandlerController=null),this._updatingHandles.add(()=>{var m;return{style:this.layer.currentStyleInfo.style,pixelRatio:(m=this.view.state)==null?void 0:m.contentPixelRatio}},({style:m,pixelRatio:c})=>{this._tileHandlerController&&this._tileHandlerController.abort(),this._tileHandlerController=new AbortController,this._memCache.clear();const b=new P(m),y=new B(this.layer,b,c,this._memCache),C=y.start({signal:this._tileHandlerController.signal,schedule:x}),f=y.spriteMosaic;C.then(()=>this._tileHandlerController=null),this._updatingHandles.addPromise(Promise.all([C,f]).then(([,S])=>{const w=this._tileHandler,v=this.painter;this.painter=new D(S,y.glyphMosaic),this._tileHandler=y,this.emit("data-changed"),w.destroy(),v&&v.dispose()}))});const q=Promise.all([n,I,$]);this.addResolvingPromise(q)}destroy(){this.painter=O(this.painter),this._tileHandlerController=Z(this._tileHandlerController),this._tileHandler=H(this._tileHandler),this._memCache=H(this._memCache)}get contentZoom(){return E("disable-feature:vtl-level-shift")?1:this.view.qualitySettings.tiledSurface.vtlContentZoom}get displayLevelRange(){const a=this.tileInfo.lods,t=this.layer.minScale||a[0].scale,e=this.layer.maxScale||a[a.length-1].scale,r=this.levelRangeFromScaleRange(t,e);return this.layer.maxScale?r.maxLevel++:r.maxLevel+=this.levelShift,r}get dataScaleRange(){const a=this.tileInfo.lods;return{minScale:a[0].scale,maxScale:a[a.length-1].scale}}get dataLevelRange(){const{minScale:a,maxScale:t}=this.dataScaleRange,e=this.levelRangeFromScaleRange(a,t);return e.minLevel===1&&this.tileInfo.size[0]===256&&(e.minLevel=0),e.maxLevel+=this.levelShift,e}async fetchTile(a,t,e,r){return this._tileHandler.getVectorTile(a,t,e,r)}};d([u()],p.prototype,"layer",void 0),d([u()],p.prototype,"levelShift",void 0),d([u()],p.prototype,"contentZoom",null),d([u()],p.prototype,"displayLevelRange",null),d([u()],p.prototype,"tileInfo",void 0),d([u()],p.prototype,"dataScaleRange",null),d([u()],p.prototype,"dataLevelRange",null),d([u()],p.prototype,"updatingProgressValue",void 0),p=d([K("esri.views.3d.layers.VectorTileLayerView3D")],p);const _r=p;function St(a){return t=>a.immediate.schedule(t)}export{_r as default};
