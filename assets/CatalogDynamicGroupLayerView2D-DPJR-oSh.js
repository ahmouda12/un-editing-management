import{bh as l,aI as u,eO as c,cR as y,aU as f,hn as g,x as w,B as V}from"./index-DPJiPkbh.js";import{m as v}from"./LayerView2D-PBUj6K28.js";import{u as C}from"./LayerView-DYVP3cuG.js";import"./scaleUtils-C37jhR61.js";import"./Container-D-UnjuYH.js";import"./DefaultUI-y65bhLzJ.js";import"./ReactiveMap-sicXFvKD.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./heightModelInfoUtils-irmNrBgu.js";import"./mat2df64-CBKYtunK.js";import"./mat3-CakTilsz.js";import"./vec2f32-BbH2jxlN.js";import"./normalizeUtils-CVZirBXT.js";import"./normalizeUtilsCommon-DTYpWx_K.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./accessibleHandler-XhnTPGUg.js";import"./Compass-DbISr2nW.js";import"./utils-DsJqvptN.js";import"./GoTo-28s5bp4H.js";import"./NavigationToggle-DiUrJhDe.js";import"./Zoom-D-LKGxB_.js";import"./EffectView-DBKHGQIz.js";import"./DisplayObject-jRWssau_.js";import"./highlightReasons-C6XJZYBL.js";import"./Tile-C2x0ojRV.js";import"./quickselect-deeG3Iol.js";import"./TileKey-BicQgvrV.js";import"./definitions-B54owTRu.js";import"./enums-DSseSvdG.js";import"./Texture-BRxaK8g9.js";import"./ClipRect-Hx0McZSN.js";const o=Symbol();let p=class extends v(C){constructor(){super(...arguments),this.layerViews=new l,this._debouncedUpdate=u(async()=>{const{layer:e,parent:{footprintLayerView:i}}=this;let s=[];if(i){const d=this._createQuery(),{features:n}=await i.queryFeatures(d);this.suspended||(s=n.map(r=>e.acquireLayer(r)))}this.removeHandles(o),this.addHandles(s,o)})}attach(){this.addAttachHandles([this._updatingHandles.addOnCollectionChange(()=>this.layerViews,()=>this._updateStageChildren(),{initial:!0}),c(()=>{var e;return((e=this.parent.footprintLayerView)==null?void 0:e.dataUpdating)===!1},()=>this._updateLayers()),y(()=>{var e;return[this.layer.maximumVisibleSublayers,this.suspended,(e=this.parent.footprintLayerView)==null?void 0:e.filter]},()=>this._updateLayers())])}detach(){this.container.removeAllChildren(),this.removeHandles(o)}update(e){}moveStart(){}viewChange(){}moveEnd(){}isUpdating(){return this.layerViews.some(e=>e.updating)}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((e,i)=>this.container.addChildAt(e.container,i))}_updateLayers(){this.suspended?this.removeHandles(o):this._updatingHandles.addPromise(this._debouncedUpdate().catch(e=>{f.getLogger(this).error(e)}))}_createQuery(){const{parent:{footprintLayerView:e},layer:{maximumVisibleSublayers:i,parent:{itemTypeField:s,itemSourceField:d,objectIdField:n,orderBy:r}}}=this,h=`${s} <> 'Scene Service'`,t=e.createQuery();t.returnGeometry=!1,t.num=i,t.outFields=[n,d],t.where=g(t.where,h);const a=r==null?void 0:r.find(m=>m.field&&!m.valueExpression);return a!=null&&a.field&&(t.orderByFields=[`${a.field} ${a.order==="descending"?"DESC":"ASC"}`]),t}};p=w([V("esri.views.2d.layers.CatalogDynamicGroupLayerView2D")],p);const te=p;export{te as default};
