import{x as r,y as i,B as d,eW as M,ab as O,eP as y,f1 as k,cR as _,b5 as R,s as T,aX as $}from"./index-DPJiPkbh.js";import{o as C}from"./StreamFeatureManager-DlF8Erda.js";import{createConnection as G}from"./createConnection-DOsp18dR.js";import{h as P}from"./EventedSet-Bdx_ulGH.js";import{b as x}from"./HeatmapDensity.glsl-DC8u9_64.js";import{n as j}from"./LayerView3D-DQ1MECMx.js";import{C as E}from"./ElevationContext-DtSabp_5.js";import{u as U}from"./LayerView-DYVP3cuG.js";import{r as V}from"./StreamLayerView-CNx3wZ-g.js";import"./CircularArray-DfLrgW_-.js";import"./query-DwX36F8e.js";import"./normalizeUtils-CVZirBXT.js";import"./normalizeUtilsCommon-DTYpWx_K.js";import"./pbfQueryUtils-DlRCjCDR.js";import"./pbf-BAzJBNw5.js";import"./OptimizedGeometry-DLPswkPy.js";import"./OptimizedFeature-CXeSoBCN.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./hydratedFeatures-DhDSkMoS.js";import"./geometryServiceUtils-B1dYTJN2.js";import"./ReactiveMap-sicXFvKD.js";import"./dehydratedFeatures-BVErPR64.js";import"./dehydratedFeatureComparison-DtGCE82y.js";import"./EdgeShader.glsl-CSDpUb7H.js";import"./WaterSurface.glsl-CP2trn1z.js";import"./Scheduler-B7taRppB.js";import"./debugFlags-BTuu0IjQ.js";import"./RenderState-DaVlEYWY.js";import"./ColorMaterial.glsl-yoRZJYnh.js";import"./mat3-CakTilsz.js";import"./BufferView-D7hl-e1J.js";import"./IntegerPassUniform-Cz4js9jy.js";import"./enums-DSseSvdG.js";import"./Texture-BRxaK8g9.js";import"./BindType-BmZEZMMh.js";import"./interfaces-CGza0uBR.js";import"./Util-C76gCxal.js";import"./VertexAttribute-BnAa5VW0.js";import"./basicInterfaces-DngWxyLO.js";import"./ShaderTechniqueConfiguration-Ba2Oo7i0.js";import"./doublePrecisionUtils-B0owpBza.js";import"./Material-CcaRhBp-.js";import"./ContentObject-tLjB2Ud3.js";import"./requestImageUtils-QtRT18sL.js";import"./InterleavedLayout-nriK6Yun.js";import"./types-D0PSWh4d.js";import"./VertexColor.glsl-COPd45YS.js";import"./OrderIndependentTransparency-Dar7ikM6.js";import"./floatRGBA-CHZINRxm.js";import"./Attribute-B-NAci_J.js";import"./Geometry-BiufU1jP.js";import"./Indices-ijvqWnhD.js";import"./triangle-aMXw_G3u.js";import"./lineSegment-BXFQuctu.js";import"./vec2f32-BbH2jxlN.js";import"./featureConversionUtils-DQOpYys3.js";import"./edgeUtils-BrtbNrdR.js";import"./earcut-nZVQjWaZ.js";import"./computeTranslationToOriginAndRotation-DJULrcwj.js";import"./DoubleArray-MGZZXTmk.js";import"./vec3-CkCkHRdL.js";import"./SnappingCandidate-O5eRSE6e.js";import"./triangulationUtils-19KnAipc.js";import"./deduplicate-BSZzOE1N.js";import"./ElevationProvider-DuAnZ1w5.js";import"./boundedPlane-C7AEtm0i.js";import"./verticalOffsetUtils-5CRVG66a.js";import"./orientedBoundingBox-BABDZfWD.js";import"./quat-B_RTSvGc.js";import"./spatialReferenceEllipsoidUtils-MJ9Uj9G-.js";import"./Normals-D9FGVH8S.js";import"./RealisticTree.glsl-mVrbbLCg.js";import"./DefaultMaterial_COLOR_GAMMA-KFGBhAW-.js";import"./resourceUtils-BOaxdhtD.js";import"./NestedMap-DgiGbX8E.js";import"./symbolColorUtils-PbK7g70N.js";import"./CIMSymbolHelper-Do5YMnYc.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-CPCkP0Vo.js";import"./GeometryUtils-CYtATAOa.js";import"./enums-BRqP_wXA.js";import"./definitions-B54owTRu.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./line-BSkXm7S3.js";import"./projectVectorToPoint-iRqWB51r.js";import"./MeshComponent-h79hEkUa.js";import"./imageUtils-CbDOqHX3.js";import"./meshVertexSpaceUtils-BjFcMx2J.js";import"./MeshLocalVertexSpace-BiaaX75A.js";import"./georeference-18LDVEFC.js";import"./axisAngleDegrees-B1MWDIoz.js";import"./interfaces-DkjgzG8v.js";import"./frustum-0hRlYIm-.js";import"./DefaultLayouts-Drvj0JwT.js";import"./glUtil-DS73TAjp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./Octree-CGixHoMx.js";import"./BufferObject-wa67LmxE.js";import"./Intersector-ovsF6jeJ.js";import"./weather-Ce7bakF4.js";import"./RenderCoordsHelper-DFKqBCUS.js";import"./scaleUtils-C37jhR61.js";import"./DefaultUI-y65bhLzJ.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./heightModelInfoUtils-irmNrBgu.js";import"./mat2df64-CBKYtunK.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./accessibleHandler-XhnTPGUg.js";import"./Compass-DbISr2nW.js";import"./utils-DsJqvptN.js";import"./GoTo-28s5bp4H.js";import"./NavigationToggle-DiUrJhDe.js";import"./Zoom-D-LKGxB_.js";import"./viewpointUtils-CgvaVEdA.js";import"./earthUtils-Dztb23Rc.js";import"./spatialReferenceSupport-CfW1ZJ7C.js";import"./ElevationSamplerData-2i_xP9yk.js";import"./terrainUtils-CqzNkC6w.js";import"./TileInfo-Lr1EBoW1.js";import"./TileKey-DZd6gJy7.js";import"./Environment-CUjcoIlu.js";import"./projectPointToWGS84ComparableLonLat-DpmzTiqz.js";import"./vec3f32-Cw9Q6TO_.js";import"./Program-DCRJBPTx.js";import"./ShadowCastVisualizeTechniqueConfiguration-B1R_waRt.js";import"./ray-cdkbAool.js";import"./ZoomMomentumEstimator-CGSDfs6t.js";import"./labelFormatUtils-D6Y1wMdU.js";import"./FeatureTileDescriptor3D-pKUnhSEa.js";import"./ElevationQueryTileCache-CV-7cE3j.js";import"./LayerConstants-B33OP6sh.js";import"./Intersector-G-a_ey6X.js";import"./ElevationRange-BrgM1moX.js";import"./LercDecoder-B7XLyp93.js";import"./WorkerHandle-Vum6FPcM.js";import"./RenderableTile-0h8kMQ1Y.js";import"./enums-BRzLM11V.js";import"./TileStrategy-Bs8uTjKa.js";import"./TileKey-BicQgvrV.js";import"./QueueProcessor-DdpNWD80.js";import"./VertexArrayObject-BGsrrzff.js";import"./config-MDUrh2eL.js";import"./DefaultVertexAttributeLayouts-BBe0WA5l.js";import"./DisplayObject-jRWssau_.js";import"./rasterUtils-De8gyIVg.js";import"./StyleDefinition-pu9RBNlY.js";import"./resources-uOJIJyus.js";import"./edgeProcessing-B_9K5VFT.js";import"./EdgeWorkerHandle-D9CAJ86j.js";import"./workerHelper-BwdLYxhk.js";import"./testSVGPremultipliedAlpha-BaLE2eLV.js";import"./RenderingContext-CmYcri2p.js";import"./ProgramCache-EKFY6gsC.js";import"./queryForSymbologySnapping-BICAv2jY.js";import"./hash-CcEbRgUF.js";import"./Graphics3DScaleVisibility-CuBNd7V0.js";import"./rendererConversion-B4ViyOJh.js";import"./optimizedFeatureQueryEngineAdapter-DY8fepQr.js";import"./centroid-DdLmOD72.js";import"./PooledRBush-_7CFgxlo.js";import"./quickselect-deeG3Iol.js";import"./popupUtils-DP5YqEgW.js";import"./QueryEngine-Bv1zxA5Y.js";import"./WhereClause-CvX8nL_c.js";import"./timeSupport-CgWQEL9f.js";import"./json-Wa8cmqdu.js";import"./QueryEngineCapabilities-CTDe3LlQ.js";import"./utils-CsJl7fpA.js";import"./utils-BPDqzHGa.js";import"./ClassBreaksDefinition-D3fBaaBL.js";import"./FeatureStore-rgyDPBov.js";import"./BoundsStore-CSr2jrzf.js";import"./heatmapTextureUtils-CSQ77pgu.js";import"./projectExtentUtils-B-47QWDH.js";const F=2500;let m=class extends R{getObjectId(){return this.objectId}};r([i({type:Number,json:{read:!0}})],m.prototype,"objectId",void 0),m=r([d("esri.layers.graphics.controllers.StreamGraphic")],m);class L{constructor(e){this.onUpdate=e,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(e){this._idToGraphic.set(e.objectId,e)}get(e){return this._idToGraphic.get(e)}forEach(e){this._idToGraphic.forEach(e)}removeById(e){const o=this._idToGraphic.get(e);return o?(o.sourceLayer=o.layer=null,this._idToGraphic.delete(e),o):null}update(e,o){this.onUpdate(e,o)}get size(){return this._idToGraphic.size}}let p=class extends M(O){constructor(){super(...arguments),this.isPaused=!1,this.graphics=new P,this._updateInfo={websocket:0,client:0},this._updateIntervalId=null,this._outSpatialReference=null}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId!==null&&(clearInterval(this._updateIntervalId),this._updateIntervalId=null)}clear(){this._shutdown(),this.graphics.clear()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_shutdown(){this._clearInterval(),this.connection=y(this.connection),this.store=y(this.store),this.removeAllHandles()}_startup(){const{layer:t,layerView:e}=this,{spatialReference:o,definitionExpression:a,geometryDefinition:c,objectIdField:l,timeInfo:f,purgeOptions:g,maxReconnectionAttempts:v,maxReconnectionInterval:I,customParameters:w}=t,b=t.geometryType?k.toJSON(t.geometryType):null,S=o,h=e.view.spatialReference;this.clear(),this._set("connection",G(t.parsedUrl,S,h,b,a,c,v,I,w??void 0)),this._outSpatialReference=h.toJSON(),this.store=new L(this._onUpdate.bind(this)),this.featuresManager=new C(this.store,l,f.toJSON(),g);const u="startup-watches";this.removeHandles(u),this.addHandles([t.on("send-message-to-socket",n=>this.connection.sendMessageToSocket(n)),t.on("send-message-to-client",n=>this.connection.sendMessageToClient(n)),this.connection.on("data-received",n=>this._onFeature(n)),this.connection.on("message-received",n=>this._onWebSocketMessage(n)),_(()=>[t.definitionExpression,t.geometryDefinition,t.purgeOptions],()=>this._startup())],u),this.isPaused||this._initUpdateInterval()}_onWebSocketMessage(t){if(this.layerView.emit("message-received",t),"type"in t)switch(t.type){case"delete":if(t.objectIds)for(const e of t.objectIds)this.featuresManager.removeById(e);if(t.trackIds)for(const e of t.trackIds)this.featuresManager.removeByTrackId(e);break;case"clear":this.store.forEach(e=>this.featuresManager.removeById(e.objectId))}}_onFeature(t){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:t.attributes,centroid:t.centroid,geometry:t.geometry});try{t.geometry==null||t.geometry.spatialReference||(t.geometry.spatialReference=this._outSpatialReference);const e=m.fromJSON(t);e.sourceLayer=e.layer=this.layer,this.featuresManager.add(e)}catch{}}_onUpdate(t,e){e!=null&&this.graphics.removeMany(e),t!=null&&(this._updateInfo.client+=t.length,this.graphics.addMany(t))}_initUpdateInterval(){this._clearInterval();const{updateInterval:t}=this.layer;let e=performance.now();this._updateIntervalId=setInterval(()=>{const o=performance.now(),a=o-e;if(a>F){e=o;const c=Math.round(this._updateInfo.client/(a/1e3)),l=Math.round(this._updateInfo.websocket/(a/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:c,websocket:l})}this.featuresManager.checkForUpdates()},t)}pauseStream(){this.isPaused=!0,this._clearInterval()}resumeStream(){this.isPaused=!1,this._initUpdateInterval()}disconnect(){this._shutdown()}connect(){this.connection==null&&this._startup()}clearGraphics(){this.graphics.clear()}};r([i()],p.prototype,"isPaused",void 0),r([i({constructOnly:!0})],p.prototype,"layer",void 0),r([i({constructOnly:!0})],p.prototype,"layerView",void 0),r([i()],p.prototype,"connection",void 0),r([i({readOnly:!0})],p.prototype,"updating",null),p=r([d("esri.layers.graphics.controllers.StreamController")],p);let s=class extends V(x(j(U))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=E.ASYNC,this.hasZ=!0,this.hasM=!1}initialize(){this.addHandles(_(()=>this.suspended,t=>{this.controller&&this._onSuspendedChange(t)}))}get connectionError(){var e,o;const t=(o=(e=this.controller)==null?void 0:e.connection)==null?void 0:o.errorString;return t?new T("stream-controller",t):null}createQuery(){return new $({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(t,e){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(t),e==null?void 0:e.signal)}get _streamConnectionStatus(){var t,e;return((e=(t=this.controller)==null?void 0:t.connection)==null?void 0:e.connectionStatus)??"disconnected"}createController(){return new p({layer:this.layer,layerView:this})}beforeSetController(){}_doPause(){var t;(t=this.controller)==null||t.pauseStream()}_doResume(){var t;(t=this.controller)==null||t.resumeStream()}_doDisconnect(){var t;(t=this.controller)==null||t.disconnect(),this._doPause()}_doConnect(){var t;(t=this.controller)==null||t.connect(),this.resume()}_doClear(){var t;(t=this.controller)==null||t.clearGraphics()}};r([i({readOnly:!0})],s.prototype,"updatePolicy",void 0),r([i({readOnly:!0})],s.prototype,"connectionError",null),r([i()],s.prototype,"controller",void 0),r([i({readOnly:!0})],s.prototype,"hasZ",void 0),r([i({readOnly:!0})],s.prototype,"hasM",void 0),r([i({readOnly:!0})],s.prototype,"_streamConnectionStatus",null),s=r([d("esri.views.3d.layers.StreamLayerView3D")],s);const ro=s;export{ro as default};
