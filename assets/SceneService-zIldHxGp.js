import{x as o,y as p,hr as E,f as v,a3 as u,a6 as S,bB as T,bC as K,a4 as O,B as U,aI as j,hs as L,a8 as V,ht as $,hu as P,aU as _,hv as C,I as M,s as y,v as g,S as q,Q as z,o as b}from"./index-B252NKV0.js";import{i as N}from"./originUtils-D69mHv66.js";import{r as k}from"./I3SIndexInfo-CSS6MU43.js";import{p as B,n as J}from"./resourceUtils-Fm9-BaIE.js";import{i as R}from"./saveAPIKeyUtils-Cqg1dAPN.js";import{t as F}from"./saveUtils-BUU9RtL_.js";const X=h=>{let a=class extends h{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=j(async(e,t,i)=>{switch(e){case f.SAVE:return this._save(t);case f.SAVE_AS:return this._saveAs(i,t)}})}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(e.spatialReference!=null)return v.fromJSON(e.spatialReference);const t=e.store,i=t.indexCRS||t.geographicCRS,r=i&&parseInt(i.substring(i.lastIndexOf("/")+1,i.length),10);return r!=null?new v(r):null}readFullExtent(e,t,i){if(e!=null&&typeof e=="object"){const s=e.spatialReference==null?{...e,spatialReference:this._readSpatialReference(t)}:e;return S.fromJSON(s,i)}const r=t.store,n=this._readSpatialReference(t);return n==null||(r==null?void 0:r.extent)==null||!Array.isArray(r.extent)||r.extent.some(s=>s<w)?null:new S({xmin:r.extent[0],ymin:r.extent[1],xmax:r.extent[2],ymax:r.extent[3],spatialReference:n})}parseVersionString(e){const t={major:Number.NaN,minor:Number.NaN,versionString:e},i=e.split(".");return i.length>=2&&(t.major=parseInt(i[0],10),t.minor=parseInt(i[1],10)),t}readVersion(e,t){const i=t.store,r=i.version!=null?i.version.toString():"";return this.parseVersionString(r)}readTitlePortalItem(e){return this.sublayerTitleMode!=="item-title"?void 0:e}readTitleService(e,t){var n;const i=(n=this.portalItem)==null?void 0:n.title;if(this.sublayerTitleMode==="item-title")return L(this.url,t.name);let r=t.name;if(!r&&this.url){const s=V(this.url);s!=null&&(r=s.title)}return this.sublayerTitleMode==="item-title-and-service-name"&&i&&(r=i+" - "+r),$(r)}set url(e){const t=P({layer:this,url:e,nonStandardUrlAllowed:!1,logger:_.getLogger(this)});this._set("url",t.url),t.layerId!=null&&this._set("layerId",t.layerId)}writeUrl(e,t,i,r){C(this,e,"layers",t,r)}get parsedUrl(){const e=this._get("url"),t=M(e);return this.layerId!=null&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _fetchIndexAndUpdateExtent(e,t){this.indexInfo=k(this.parsedUrl.path,this.rootNode,e,this.customParameters,this.apiKey,_.getLogger(this),t),this.fullExtent==null||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(e){var t,i,r,n;if((e==null?void 0:e.type)==="page"){const s=e.rootIndex%e.pageSize,l=(i=(t=e.rootPage)==null?void 0:t.nodes)==null?void 0:i[s];if(((r=l==null?void 0:l.obb)==null?void 0:r.center)==null||l.obb.halfSize==null)throw new y("sceneservice:invalid-node-page","Invalid node page.");if(l.obb.center[0]<w||this.fullExtent==null||this.fullExtent.hasZ)return;const d=l.obb.halfSize,c=l.obb.center[2],I=Math.sqrt(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);this.fullExtent.zmin=c-I,this.fullExtent.zmax=c+I}else if((e==null?void 0:e.type)==="node"){const s=(n=e.rootNode)==null?void 0:n.mbs;if(!Array.isArray(s)||s.length!==4||s[0]<w)return;const l=s[2],d=s[3],{fullExtent:c}=this;c&&(c.zmin=l-d,c.zmax=l+d)}}async _fetchService(e){if(this.url==null)throw new y("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(this.layerId==null&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);t!=null&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const t=await g(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id}async _fetchServiceLayer(e){var n;const t=await g(((n=this.parsedUrl)==null?void 0:n.path)??"",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let i=!1;if(t.data.layerType&&t.data.layerType==="Voxel"&&(i=!0),i)return this._fetchVoxelServiceLayer();const r=t.data;this.read(r,this._getServiceContext()),this.validateLayer(r)}async _fetchVoxelServiceLayer(e){var i;const t=(await g(((i=this.parsedUrl)==null?void 0:i.path)+"/layer",{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e})).data;this.read(t,this._getServiceContext()),this.validateLayer(t)}_getServiceContext(){var e;return{origin:"service",portalItem:this.portalItem,portal:(e=this.portalItem)==null?void 0:e.portal,url:this.parsedUrl}}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&typeof this.beforeSave=="function"&&await this.beforeSave()}validateLayer(e){}_updateTypeKeywords(e,t,i){e.typeKeywords||(e.typeKeywords=[]);const r=t.getTypeKeywords();for(const n of r)e.typeKeywords.push(n);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter((n,s,l)=>l.indexOf(n)===s),i===m.newItem&&(e.typeKeywords=e.typeKeywords.filter(n=>n!=="Hosted Service")))}async _saveAs(e,t){var d;const i={...A,...t};let r=q.from(e);if(!r)throw new y("sceneservice:portal-item-required","_saveAs() requires a portal item to save to");R(r),r.id&&(r=r.clone(),r.id=null);const n=r.portal||z.getDefault();await this._ensureLoadBeforeSave(),r.type=x,r.portal=n;const s=b(r,"portal-item",!0),l={layers:[this.write({},s)]};return await Promise.all(s.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(l,s,i),r.url=this.url,r.title||(r.title=this.title),this._updateTypeKeywords(r,i,m.newItem),await n.signIn(),await((d=n.user)==null?void 0:d.addItem({item:r,folder:i==null?void 0:i.folder,data:l})),await B(this.resourceReferences,s),this.portalItem=r,N(s),s.portalItem=r,r}async _save(e){const t={...A,...e};if(!this.portalItem)throw new y("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService");if(R(this.portalItem),this.portalItem.type!==x)throw new y("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${x}"`);await this._ensureLoadBeforeSave();const i=b(this.portalItem,"portal-item",!0),r={layers:[this.write({},i)]};return await Promise.all(i.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(r,i,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,m.existingItem),await J(this.portalItem,r,this.resourceReferences,i),N(i),this.portalItem}async _validateAgainstJSONSchema(e,t,i){const r=i==null?void 0:i.validationOptions;F(t,{errorName:"sceneservice:save"},{ignoreUnsupported:r==null?void 0:r.ignoreUnsupported,supplementalUnsupportedErrors:["scenemodification:unsupported"]}),r==null||r.enabled}};return o([p(E)],a.prototype,"id",void 0),o([p({type:v})],a.prototype,"spatialReference",void 0),o([u("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],a.prototype,"readSpatialReference",null),o([p({type:S})],a.prototype,"fullExtent",void 0),o([u("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],a.prototype,"readFullExtent",null),o([p({readOnly:!0,type:T})],a.prototype,"heightModelInfo",void 0),o([p({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],a.prototype,"minScale",void 0),o([p({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],a.prototype,"maxScale",void 0),o([p({readOnly:!0})],a.prototype,"version",void 0),o([u("version",["store.version"])],a.prototype,"readVersion",null),o([p({type:String,json:{read:{source:"copyrightText"}}})],a.prototype,"copyright",void 0),o([p({type:String,json:{read:!1}})],a.prototype,"sublayerTitleMode",void 0),o([p({type:String})],a.prototype,"title",void 0),o([u("portal-item","title")],a.prototype,"readTitlePortalItem",null),o([u("service","title",["name"])],a.prototype,"readTitleService",null),o([p({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],a.prototype,"layerId",void 0),o([p(K)],a.prototype,"url",null),o([O("url")],a.prototype,"writeUrl",null),o([p()],a.prototype,"parsedUrl",null),o([p({readOnly:!0})],a.prototype,"store",void 0),o([p({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],a.prototype,"rootNode",void 0),a=o([U("esri.layers.mixins.SceneService")],a),a},w=-1e38;var m;(function(h){h[h.existingItem=0]="existingItem",h[h.newItem=1]="newItem"})(m||(m={}));const x="Scene Service",A={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};var f;(function(h){h[h.SAVE=0]="SAVE",h[h.SAVE_AS=1]="SAVE_AS"})(f||(f={}));export{X as L,f as P};
