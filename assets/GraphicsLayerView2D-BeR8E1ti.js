import{eP as s,b5 as a,bh as g,aE as n,bH as h,x as m,y as l,B as c}from"./index-B252NKV0.js";import{t as d}from"./highlightReasons-DkCnfpXT.js";import{m as u}from"./LayerView2D-B2XPas4a.js";import{t as w}from"./GraphicContainer-BYq8MfHQ.js";import{$ as y}from"./GraphicsView2D-1nlIBwo4.js";import{t as V}from"./HighlightCounter-bMS3Xh4h.js";import{u as f}from"./LayerView-D2pvr0Q6.js";import"./Tile-DcDRio1X.js";import"./quickselect-CDrMhodd.js";import"./TileKey-Dt_FQSdw.js";import"./scaleUtils-BKVOuLFd.js";import"./Container-D0mzr_VC.js";import"./DefaultUI-4DBz9mkp.js";import"./ReactiveMap-DcQhQdHv.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./heightModelInfoUtils-CYfboRg2.js";import"./mat2df64-CBKYtunK.js";import"./mat3-DPPMYMhB.js";import"./vec2f32-BbH2jxlN.js";import"./normalizeUtils-PvjooRb6.js";import"./normalizeUtilsCommon-ByXMGwNF.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./accessibleHandler-yeijlTke.js";import"./Compass-BqUvL1gL.js";import"./utils-DsJqvptN.js";import"./GoTo-B08Csiw_.js";import"./NavigationToggle-DNdSP6VQ.js";import"./Zoom-BQUhauBk.js";import"./EffectView-CzpqZJb_.js";import"./DisplayObject-B2mbaom_.js";import"./definitions-B54owTRu.js";import"./enums-DSseSvdG.js";import"./Texture-BT-WYJiR.js";import"./ClipRect-CGrUtOuF.js";import"./AGraphicContainer-BShFLEDT.js";import"./TechniqueInstance-CZlcBeKW.js";import"./UpdateTracking2D-DZm4ygQJ.js";import"./TurboLine-DvArdm2j.js";import"./enums-BRqP_wXA.js";import"./earcut-gCDAS0gj.js";import"./GeometryUtils-BvoQHMVi.js";import"./OptimizedGeometry-DLPswkPy.js";import"./CIMSymbolHelper-ZEeHC0zq.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-oEBemou-.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./LabelMetric-DyGbq7CL.js";import"./Program-wFflZSL5.js";import"./BufferObject-DdM-Y0w0.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BindType-BmZEZMMh.js";import"./Util-DsJryf9x.js";import"./constants-D5zmR9t2.js";import"./TileContainer-gaWyHmtV.js";import"./WGLContainer-GIR_kCuW.js";import"./VertexArrayObject-adc8SYn-.js";import"./WGLBrushVTLSymbol---yR8o1P.js";import"./vec4f32-CjrfB-0a.js";import"./StyleDefinition-pu9RBNlY.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-D_F9StYA.js";import"./DefaultVertexAttributeLayouts-o8Fw2Bif.js";import"./featureConversionUtils-BVsMNPzF.js";import"./OptimizedFeature-CXeSoBCN.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-D85xG_gV.js";import"./heatmapTextureUtils-BX_wQ43L.js";import"./QueueProcessor-CvAp86Lk.js";import"./vec3f32-Cw9Q6TO_.js";import"./AttributeStore-C-fB6HAG.js";import"./labelFormatUtils-H994QWFK.js";import"./centroid-DdLmOD72.js";import"./timeSupport-C0A6H9UZ.js";import"./json-Wa8cmqdu.js";import"./normalizeUtilsSync-DOwl-Fyb.js";let e=class extends u(f){constructor(){super(...arguments),this._highlightCounter=new V}attach(){this.graphicsView=new y({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new w(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this._updateHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=s(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="highlight"){let r;typeof i=="number"?r=[i]:i instanceof a?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(p=>p&&p.uid):g.isCollection(i)&&i.length>0&&(r=i.map(p=>p&&p.uid).toArray());const o=r==null?void 0:r.filter(n);return o!=null&&o.length?(this._addHighlight(o,t),h(()=>this._removeHighlight(o,t))):h()}_addHighlight(i,t){this._highlightCounter.addReason(i,t),this._updateHighlight()}_removeHighlight(i,t){this._highlightCounter.deleteReason(i,t),this._updateHighlight()}_updateHighlight(){var t;const i=[];for(const r of this._highlightCounter.ids()){const o=this._highlightCounter.getHighestReason(r),p=d(o);i.push({objectId:r,highlightFlags:p})}(t=this.graphicsView)==null||t.setHighlight(i)}};m([l()],e.prototype,"graphicsView",void 0),e=m([c("esri.views.2d.layers.GraphicsLayerView2D")],e);const Ki=e;export{Ki as default};
