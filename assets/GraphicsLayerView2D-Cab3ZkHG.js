import{eP as s,b5 as a,bh as g,aE as n,bH as h,x as m,y as l,B as c}from"./index-DPJiPkbh.js";import{t as d}from"./highlightReasons-C6XJZYBL.js";import{m as u}from"./LayerView2D-PBUj6K28.js";import{t as w}from"./GraphicContainer-B6DFldFQ.js";import{$ as y}from"./GraphicsView2D-CQiay_dM.js";import{t as V}from"./HighlightCounter-CqR9g7Xx.js";import{u as f}from"./LayerView-DYVP3cuG.js";import"./Tile-C2x0ojRV.js";import"./quickselect-deeG3Iol.js";import"./TileKey-BicQgvrV.js";import"./scaleUtils-C37jhR61.js";import"./Container-D-UnjuYH.js";import"./DefaultUI-y65bhLzJ.js";import"./ReactiveMap-sicXFvKD.js";import"./IViewEvents-Bci6PjlS.js";import"./interfaces-D6pIddIh.js";import"./heightModelInfoUtils-irmNrBgu.js";import"./mat2df64-CBKYtunK.js";import"./mat3-CakTilsz.js";import"./vec2f32-BbH2jxlN.js";import"./normalizeUtils-CVZirBXT.js";import"./normalizeUtilsCommon-DTYpWx_K.js";import"./capabilities-C84AMSCg.js";import"./themeUtils-C3zvZbsE.js";import"./accessibleHandler-XhnTPGUg.js";import"./Compass-DbISr2nW.js";import"./utils-DsJqvptN.js";import"./GoTo-28s5bp4H.js";import"./NavigationToggle-DiUrJhDe.js";import"./Zoom-D-LKGxB_.js";import"./EffectView-DBKHGQIz.js";import"./DisplayObject-jRWssau_.js";import"./definitions-B54owTRu.js";import"./enums-DSseSvdG.js";import"./Texture-BRxaK8g9.js";import"./ClipRect-Hx0McZSN.js";import"./AGraphicContainer-CGJW73Pm.js";import"./TechniqueInstance-XVKMxhdo.js";import"./UpdateTracking2D-Bx7nYhX8.js";import"./TurboLine-CEECPkhn.js";import"./enums-BRqP_wXA.js";import"./earcut-nZVQjWaZ.js";import"./GeometryUtils-CYtATAOa.js";import"./OptimizedGeometry-DLPswkPy.js";import"./CIMSymbolHelper-Do5YMnYc.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-CPCkP0Vo.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BhuXqU4L.js";import"./LabelMetric-BJcGSDIa.js";import"./Program-DCRJBPTx.js";import"./BufferObject-wa67LmxE.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BindType-BmZEZMMh.js";import"./Util-C76gCxal.js";import"./constants-D5zmR9t2.js";import"./TileContainer-CwVZt8Bm.js";import"./WGLContainer-Dv5NxOAK.js";import"./VertexArrayObject-BGsrrzff.js";import"./WGLBrushVTLSymbol-BM1EGGpB.js";import"./vec4f32-CjrfB-0a.js";import"./StyleDefinition-pu9RBNlY.js";import"./config-MDUrh2eL.js";import"./ShaderCompiler-G2XYGDs6.js";import"./ProgramTemplate-Idpt-hsH.js";import"./DefaultVertexAttributeLayouts-BBe0WA5l.js";import"./featureConversionUtils-DQOpYys3.js";import"./OptimizedFeature-CXeSoBCN.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-D5rkXNyk.js";import"./heatmapTextureUtils-CSQ77pgu.js";import"./QueueProcessor-DdpNWD80.js";import"./vec3f32-Cw9Q6TO_.js";import"./AttributeStore-DNuJKA2n.js";import"./labelFormatUtils-D6Y1wMdU.js";import"./centroid-DdLmOD72.js";import"./timeSupport-CgWQEL9f.js";import"./json-Wa8cmqdu.js";import"./normalizeUtilsSync-flSlqQpY.js";let e=class extends u(f){constructor(){super(...arguments),this._highlightCounter=new V}attach(){this.graphicsView=new y({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new w(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this._updateHighlight()}detach(){this.container.removeAllChildren(),this.graphicsView=s(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="highlight"){let r;typeof i=="number"?r=[i]:i instanceof a?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(p=>p&&p.uid):g.isCollection(i)&&i.length>0&&(r=i.map(p=>p&&p.uid).toArray());const o=r==null?void 0:r.filter(n);return o!=null&&o.length?(this._addHighlight(o,t),h(()=>this._removeHighlight(o,t))):h()}_addHighlight(i,t){this._highlightCounter.addReason(i,t),this._updateHighlight()}_removeHighlight(i,t){this._highlightCounter.deleteReason(i,t),this._updateHighlight()}_updateHighlight(){var t;const i=[];for(const r of this._highlightCounter.ids()){const o=this._highlightCounter.getHighestReason(r),p=d(o);i.push({objectId:r,highlightFlags:p})}(t=this.graphicsView)==null||t.setHighlight(i)}};m([l()],e.prototype,"graphicsView",void 0),e=m([c("esri.views.2d.layers.GraphicsLayerView2D")],e);const Ki=e;export{Ki as default};
