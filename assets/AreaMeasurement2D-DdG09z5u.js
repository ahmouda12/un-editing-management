import{x as a,y as o,B as C,fm as R,lQ as I,lP as Q,cR as $,fs as x,eP as A,h0 as X,ad as W,b5 as M,fU as Y,jR as G,b_ as F,f_ as ee,mX as te,jV as se,mY as ie,bZ as j,a5 as B,mZ as U,m_ as f,g8 as v,f as L,m$ as S,n0 as V,cI as re,cL as b,n1 as D,ms as T,n2 as ae,iw as ne,n3 as oe,mg as z,dB as E,dN as le,dI as ue,dJ as me,dE as ce,jn as he,aU as pe,lR as k,w as de,h1 as ve,im as O,io as ye,iq as H,cU as we,lK as N,iE as ge}from"./index-DPJiPkbh.js";import{e as fe}from"./defaultUnit-DHDAnn2J.js";import{l as _e}from"./Draw-BXbPBj82.js";import{l as be,x as $e,j as Le,S as Me}from"./dragEventPipeline-C143Img8.js";import{S as Ae}from"./GraphicManipulator-D9IuJzYA.js";import{p as Se,u as De}from"./MeasurementWidgetContent-DiBZTZaR.js";import"./getDefaultUnitForView-Bcf6FxpR.js";import"./SnappingVisualizer2D-D-VHiciv.js";import"./enums-BRqP_wXA.js";import"./SnappingVisualizer-g2_BPvPy.js";import"./PointSnappingHint-DDE-Yg7Q.js";import"./EditGeometryOperations-CyMr5vX7.js";import"./SnappingContext-Cpn1WUY8.js";import"./SnappingOperation-BMTDGQRq.js";import"./Scheduler-B7taRppB.js";import"./debugFlags-BTuu0IjQ.js";import"./RenderState-DaVlEYWY.js";import"./drawSurfaces-CwETUo7e.js";import"./mat2df64-CBKYtunK.js";import"./quat-B_RTSvGc.js";import"./memoize-DsJmrG76.js";import"./dehydratedFeatureComparison-DtGCE82y.js";import"./SnappingDragPipelineStep-C3-bVnPF.js";import"./hydratedFeatures-DhDSkMoS.js";import"./interfaces-D6pIddIh.js";import"./meshVertexSpaceUtils-BjFcMx2J.js";import"./MeshLocalVertexSpace-BiaaX75A.js";import"./vec3-CkCkHRdL.js";import"./interfaces-DkjgzG8v.js";import"./drawUtils-D2HuKKkV.js";import"./UnitSelect-CjoN6u1F.js";const y=1e5;let w=class extends be{constructor(e){super(e),this._drawActive=!1,this._measurementLayer=new R({internal:!0,listMode:"hide",visible:!1}),this._manipulatorLayer=new R({internal:!0,listMode:"hide",visible:!1}),this._vertices=[],this.geodesicDistanceThreshold=null,this.measurement=null,this.measurementLabel=null}initialize(){I("esri/core/t9n/Units").then(t=>{this.messages=t}),this.addHandles(Q(async()=>{this.messages=await I("esri/core/t9n/Units")}));const e=this.view;this._draw=new _e({view:e}),e.map.addMany([this._measurementLayer,this._manipulatorLayer]),e.focus(),this.addHandles([$(()=>[this.unit,this.geodesicDistanceThreshold,this.messages],()=>{this._updateGraphics()},x),$(()=>[this.view.effectiveTheme.accentColor,this.view.effectiveTheme.textColor],()=>{if(!this._vertices.length)return;const t=this._vertices.map(({coord:i})=>i);for(const{handle:i}of this._vertices)i.remove();this._vertices=[],this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this.manipulators.removeAll(),this._updateSketch(t)})])}destroy(){const{map:e}=this.view;this._draw.view=null,this._draw=A(this._draw),e.removeMany([this._measurementLayer,this._manipulatorLayer]),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._measurementLayer=A(this._measurementLayer),this._manipulatorLayer=A(this._manipulatorLayer),this._resetVertices()}get cursor(){return this._drawActive?"crosshair":null}set editable(e){this._set("editable",e),e||this._draw.reset()}onActivate(){this._drawActive||this._vertices.length!==0||this._startSketch()}onShow(){this._measurementLayer.visible=!0,this._manipulatorLayer.visible=!0}onHide(){this._measurementLayer.visible=!1,this._manipulatorLayer.visible=!1}reset(){this.manipulators.removeAll(),this._resetVertices(),this._measurementLayer.removeAll(),this._manipulatorLayer.removeAll(),this._set("measurement",null),this._set("measurementLabel",null),this._draw.reset(),this._drawActive=!1}_resetVertices(){for(const{handle:e}of this._vertices)e.remove();this._vertices=[]}_startSketch(){this._drawActive=!0;const e=this._draw.create("polyline",{mode:"click"});e.on(["vertex-add","vertex-update","vertex-remove","cursor-update","undo","redo"],t=>this._updateSketch(t.vertices)),e.on("draw-complete",()=>this._stopSketch())}_stopSketch(){if(this._vertices.length<3)return this.reset(),void this._startSketch();this.manipulators.forEach(({manipulator:e})=>{e.interactive=!0}),this._drawActive=!1,this.finishToolCreation()}_updateSketch(e){const t=this.view.spatialReference;if(t&&(!J(t)||X())){for(;this._vertices.length>e.length;){const{handle:i,manipulator:r}=this._vertices.pop();i.remove(),this.manipulators.remove(r)}for(let i=this._vertices.length;i<e.length;i++){const[r,u]=e[i],l=Te(new W({x:r,y:u,spatialReference:t}),this.view,this._manipulatorLayer);this.manipulators.add(l);const m=$e(l,(n,s)=>{s.next(Le(this.view)).next(Me(n.graphic)).next(()=>{const c=n.graphic.geometry;this._vertices[i].coord=[c.x,c.y],this._updateGraphics()})});this._vertices.push({manipulator:l,coord:[r,u],handle:m})}if(this._vertices.length){const i=this._vertices.length-1,r=this._vertices[i],[u,l]=e[i];r.coord[0]===u&&r.coord[1]===l||(r.coord=[u,l],r.manipulator.graphic.geometry=new W({x:u,y:l,spatialReference:t}));const m=this._drawActive?this._vertices[i].manipulator:null;this.manipulators.forEach(({manipulator:n})=>{n.interactive=m==null||n!==m})}this._updateGraphics()}}_updateGraphics(){if(this._vertices.length<2)return void this._measurementLayer.removeAll();const e=ke(this._vertices.map(({coord:d})=>d),this.view.spatialReference,this.geodesicDistanceThreshold);if(!e)return;const{measurement:t,fillGeometry:i,outlineGeometry:r}=e;this._set("measurement",t);const u=t?qe(this.messages,t,this.unit):null;if(this._set("measurementLabel",u),!i&&!r)return;let l,m,n;const{graphics:s}=this._measurementLayer,c=s.length===3,{effectiveTheme:h}=this.view;c?(l=s.at(0),m=s.at(1),n=s.at(2)):(l=new M({symbol:new Y({color:G(h.accentColor,.3),outline:null})}),m=new M({symbol:new F({color:h.accentColor,width:2})}),n=new M({symbol:new ee({color:h.textColor,font:new te({size:14,family:"sans-serif"}),haloColor:G(se(h.textColor,ie.Low),.5),haloSize:2})}),s.removeAll(),s.addMany([l,m,n])),l.geometry=i,m.geometry=r,n.geometry=i==null?void 0:i.centroid,n.symbol.text=(u==null?void 0:u.area)??""}};function Te(e,t,i){const u={style:"circle",color:G(t.effectiveTheme.accentColor,.5),outline:{type:"simple-line",width:0}},l=new j({...u,size:8}),m=new j({...u,size:1.5*8}),n=new M({geometry:e,symbol:l});return new Ae({view:t,layer:i,graphic:n,focusedSymbol:m})}function ke(e,t,i){if(e.length===2){const c=new B({paths:e,spatialReference:t});let h;if(t!=null&&t.isGeographic)if(U(t))h=f(c,y);else{const d=v(c,L.WGS84),_=f(d,y);h=v(_,t)}else if(t!=null&&t.isWebMercator)h=S(c,y,"meters");else if(V(c,"meters")>=P(i)){const d=v(c,L.WGS84),_=f(d,y);h=v(_,t)}else h=c;return{measurement:null,fillGeometry:null,outlineGeometry:h}}e.push(e[0]);const r=new B({paths:[e],spatialReference:t}),u=new re({rings:[e],spatialReference:t});let l,m,n=null,s=null;if(t!=null&&t.isGeographic)if(U(t)){if(n=f(r,y),s=f(u,y),s=b(s),!s)return null;l=D([r],"meters")[0],m=T([s],"square-meters")[0]}else{const c=L.WGS84,h=v(r,c),d=v(u,c);if(n=f(h,y),s=f(d,y),s=b(s),!s)return null;l=D([h],"meters")[0],m=T([s],"square-meters")[0],n=v(n,t),s=v(s,t)}else if(t!=null&&t.isWebMercator){if(n=S(r,y,"meters"),s=S(u,y,"meters"),s=b(s),!s)return null;l=ae(r,"meters"),m=ne(s,"square-meters")}else{const c=V(r,"meters");if(c>=P(i)){const h=L.WGS84,d=v(r,h),_=v(u,h);if(n=f(d,y),s=f(_,y),s=b(s),!s)return null;l=D([d],"meters")[0],m=T([s],"square-meters")[0],n=v(n,t),s=v(s,t)}else{if(n=r,s=b(u),!s)return null;l=c,m=oe(s,"square-meters")}}return{measurement:{geometry:s,area:m,perimeter:l},fillGeometry:s,outlineGeometry:n}}function Oe(e){return e!=null}function J(e){if(!e)return!1;const{isGeographic:t,isWebMercator:i,isWGS84:r}=e;return t&&!r&&!U(e)||!t&&!i}function qe(e,t,i){if(!t||!e)return null;const r={area:null,perimeter:null},{area:u,perimeter:l}=t;switch(i){case"metric":r.area=ue(e,u,"square-meters");break;case"imperial":r.area=le(e,u,"square-meters");break;default:{const n=z(u,"square-meters",i);r.area=E(e,n,i);break}}const m=xe(i);if(m)switch(m){case"metric":r.perimeter=ce(e,l,"meters");break;case"imperial":r.perimeter=me(e,l,"meters");break;default:{const n=z(l,"meters",m);r.perimeter=E(e,n,m);break}}else r.perimeter="";return r}function xe(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-meters":return"meters";case"square-kilometers":return"kilometers";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";default:return null}}function P(e){return e??1/0}a([o()],w.prototype,"_drawActive",void 0),a([o({readOnly:!0})],w.prototype,"cursor",null),a([o({value:!0})],w.prototype,"editable",null),a([o({type:Number})],w.prototype,"geodesicDistanceThreshold",void 0),a([o({readOnly:!0})],w.prototype,"measurement",void 0),a([o({readOnly:!0})],w.prototype,"measurementLabel",void 0),a([o()],w.prototype,"messages",void 0),a([o()],w.prototype,"unit",void 0),a([o({constructOnly:!0})],w.prototype,"view",void 0),w=a([C("esri.widgets.AreaMeasurement2D.AreaMeasurement2DTool")],w);let g=class extends Se{constructor(e){super(e),this.supportedViewType="2d",this.unsupportedErrorMessage="AreaMeasurement2DViewModel is only supported in 2D views."}initialize(){this.addHandles([$(()=>{var e;return(e=this.view)==null?void 0:e.spatialReference},()=>this.clear()),$(()=>this.unit,e=>{this.tool!=null&&(this.tool.unit=e)},x),$(()=>this.geodesicDistanceThreshold,e=>{this.tool!=null&&(this.tool.geodesicDistanceThreshold=e)},x)])}get geodesicDistanceThreshold(){return this._get("geodesicDistanceThreshold")}set geodesicDistanceThreshold(e){he(pe.getLogger(this),"geodesicDistanceThreshold",{version:"4.29",warnOnce:!0}),this._set("geodesicDistanceThreshold",e)}get measurement(){return this.tool!=null?this.tool.measurement:null}get measurementLabel(){return this.tool!=null?this.tool.measurementLabel:null}get state(){var e;return this.disabled||this.view==null||!Oe(this.view.spatialReference)?"disabled":(e=this.tool)!=null&&e.measurement?this.tool.active?"measuring":"measured":"ready"}get unit(){return this._validateUnit(this.defaultUnit)}set unit(e){this._overrideIfSome("unit",this._validateUnit(e))}get unitOptions(){return k}set unitOptions(e){this._overrideIfSome("unitOptions",this._validateUnits(e))}async start(){const e=this.view;e!=null&&(await de(()=>e.ready),J(e.spatialReference)&&await ve()),this.createTool({interactive:!0})}clear(){this.removeTool()}constructTool(){return new w({view:this.view,visible:this.visible,geodesicDistanceThreshold:this.geodesicDistanceThreshold,unit:this.unit})}_validateUnit(e){const{unitOptions:t,defaultUnit:i}=this;return e!=null&&t.includes(e)?e:t.includes(i)?i:t.length>0?t[0]:i}_validateUnits(e){if(e==null)return[];const t=e.filter(i=>k.includes(i));return t.length===0?k.slice():t}};a([o(fe)],g.prototype,"defaultUnit",void 0),a([o()],g.prototype,"geodesicDistanceThreshold",null),a([o({readOnly:!0})],g.prototype,"measurement",null),a([o({readOnly:!0})],g.prototype,"measurementLabel",null),a([o({readOnly:!0})],g.prototype,"state",null),a([o({type:String})],g.prototype,"unit",null),a([o({type:[String]})],g.prototype,"unitOptions",null),g=a([C("esri.widgets.AreaMeasurement2D.AreaMeasurement2DViewModel")],g);const K=g,Z="esri-area-measurement-2d",q={base:Z,newMeasurementButton:`${Z}__clear-button`,widgetIcon:ge.measureArea};let p=class extends ye{constructor(e,t){super(e,t),this.iconClass=q.widgetIcon,this.icon=null,this.messages=null,this.messagesUnits=null,this.messagesCommon=null,this.viewModel=new K}get active(){return this.viewModel.active}get label(){var e;return((e=this.messages)==null?void 0:e.widgetLabel)??""}set label(e){this._overrideIfSome("label",e)}get unit(){return this.viewModel.unit}set unit(e){this.viewModel.unit=e}get unitOptions(){return this.viewModel.unitOptions}set unitOptions(e){this.viewModel.unitOptions=e}get view(){return this.viewModel.view}set view(e){this.viewModel.view=e}get visible(){return this.viewModel.visible}set visible(e){this.viewModel.visible=e}render(){const{messages:e,messagesCommon:t,messagesUnits:i,unit:r,unitOptions:u,viewModel:l,visible:m}=this,{active:n,measurementLabel:s,state:c,supported:h}=l;return H("div",{"aria-label":e.widgetLabel,class:this.classes(q.base,N.widget,N.panel),key:this,role:"presentation"},m?H(De,{active:n,measurementItems:[{key:"area",title:i==null?void 0:i.measures.area,value:s==null?void 0:s.area},{key:"perimeter",title:e.perimeter,value:s==null?void 0:s.perimeter}],messages:{...e,notApplicable:t.notApplicable},newMeasurementButtonClass:q.newMeasurementButton,state:c,supported:h,unit:r,unitOptions:u,onNewMeasurementClick:()=>{we(l.start())},onUnitChange:d=>{this.unit=d}}):null)}};a([o({readOnly:!0})],p.prototype,"active",null),a([o()],p.prototype,"iconClass",void 0),a([o()],p.prototype,"icon",void 0),a([o()],p.prototype,"label",null),a([o(),O("esri/widgets/AreaMeasurement2D/t9n/AreaMeasurement2D")],p.prototype,"messages",void 0),a([o(),O("esri/core/t9n/Units")],p.prototype,"messagesUnits",void 0),a([o(),O("esri/t9n/common")],p.prototype,"messagesCommon",void 0),a([o()],p.prototype,"uiStrings",void 0),a([o()],p.prototype,"unit",null),a([o()],p.prototype,"unitOptions",null),a([o()],p.prototype,"view",null),a([o({type:K})],p.prototype,"viewModel",void 0),a([o({type:Boolean})],p.prototype,"visible",null),p=a([C("esri.widgets.AreaMeasurement2D")],p);const mt=p;export{mt as default};
