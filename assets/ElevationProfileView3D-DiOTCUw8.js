import{cS as y,cT as _,ac as E,E as $,mj as D,bM as R,nS as H,cR as h,jf as P,cE as b,x as u,y as f,B as L,ab as T,eT as p,jZ as S,fh as k,a5 as z,mk as V,eP as c}from"./index-DPJiPkbh.js";import{r as G,t as v}from"./ElevationProfile-BDSNMQ_N.js";import{a as M}from"./HoveredPoints-Bkt9GekR.js";import{z as O,w}from"./OutlineVisualElement-BHh2fSUV.js";import{h as x}from"./Material-CcaRhBp-.js";import{e as I}from"./throttle-jjSnxk80.js";import"./memoize-DsJmrG76.js";import"./ElevationQueryTileCache-CV-7cE3j.js";import"./LayerConstants-B33OP6sh.js";import"./ElevationProvider-DuAnZ1w5.js";import"./boundedPlane-C7AEtm0i.js";import"./lineSegment-BXFQuctu.js";import"./verticalOffsetUtils-5CRVG66a.js";import"./mat3-CakTilsz.js";import"./orientedBoundingBox-BABDZfWD.js";import"./quat-B_RTSvGc.js";import"./spatialReferenceEllipsoidUtils-MJ9Uj9G-.js";import"./computeTranslationToOriginAndRotation-DJULrcwj.js";import"./Attribute-B-NAci_J.js";import"./Intersector-G-a_ey6X.js";import"./Intersector-ovsF6jeJ.js";import"./defaultUnit-DHDAnn2J.js";import"./getDefaultUnitForView-Bcf6FxpR.js";import"./QueueProcessor-DdpNWD80.js";import"./ReactiveMap-sicXFvKD.js";import"./Scheduler-B7taRppB.js";import"./debugFlags-BTuu0IjQ.js";import"./RenderState-DaVlEYWY.js";import"./traversalUtils-DmE6QkgJ.js";import"./ElevationQuery-yID1NUNj.js";import"./ElevationSamplerData-2i_xP9yk.js";import"./TileKey-DZd6gJy7.js";import"./UnitSelect-CjoN6u1F.js";import"./ExtendedLineVisualElement-CzSNKm2m.js";import"./vec4f32-CjrfB-0a.js";import"./frustum-0hRlYIm-.js";import"./EngineVisualElement-CQxIwceN.js";import"./ElevationContext-DtSabp_5.js";import"./IntegerPassUniform-Cz4js9jy.js";import"./enums-DSseSvdG.js";import"./Texture-BRxaK8g9.js";import"./BindType-BmZEZMMh.js";import"./interfaces-CGza0uBR.js";import"./Util-C76gCxal.js";import"./VertexAttribute-BnAa5VW0.js";import"./basicInterfaces-DngWxyLO.js";import"./ShaderTechniqueConfiguration-Ba2Oo7i0.js";import"./doublePrecisionUtils-B0owpBza.js";import"./requestImageUtils-QtRT18sL.js";import"./ContentObject-tLjB2Ud3.js";import"./axisAngleDegrees-B1MWDIoz.js";import"./weather-Ce7bakF4.js";import"./NestedMap-DgiGbX8E.js";import"./Geometry-BiufU1jP.js";import"./Indices-ijvqWnhD.js";import"./triangle-aMXw_G3u.js";import"./Octree-CGixHoMx.js";import"./InterleavedLayout-nriK6Yun.js";import"./BufferView-D7hl-e1J.js";import"./types-D0PSWh4d.js";import"./OrderIndependentTransparency-Dar7ikM6.js";import"./floatRGBA-CHZINRxm.js";import"./glUtil-DS73TAjp.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./VertexArrayObject-BGsrrzff.js";import"./BufferObject-wa67LmxE.js";import"./vec3f32-Cw9Q6TO_.js";import"./DoubleArray-MGZZXTmk.js";import"./hydratedFeatures-DhDSkMoS.js";import"./VisualElement-By0aUKlt.js";import"./LaserlineVisualElement-L3h-Gi2l.js";import"./line-BSkXm7S3.js";import"./triangulationUtils-19KnAipc.js";import"./earcut-nZVQjWaZ.js";import"./deduplicate-BSZzOE1N.js";let j=class{constructor(t){this._params=t,this._highlightTask=null,this._highlightHandle=null,this._visualElementHandle=null,this._settings=new O({getTheme:()=>this._params.view.effectiveTheme})}destroy(){this.remove()}remove(){this._highlightTask=y(this._highlightTask),this._highlightHandle=_(this._highlightHandle),this._visualElementHandle=_(this._visualElementHandle)}showHighlight(t){if(this.remove(),t==null||!g(t))return;const i=t.layer;this._highlightTask=E(async e=>{const s=await this._params.view.whenLayerView(i);$(e),D(s)&&(this._highlightHandle=s.highlight(t))})}showReshaping(t){if(this.remove(),t==null)return;const i=this._params.view,e=new w({view:i,geometry:g(t)?t.geometry:null,attached:!1,elevationInfo:R(t),renderOccluded:x.OccludeAndTransparentStencil,isDecoration:!0}),s=new H({graphic:t}),o=[h(()=>s.isDraped,n=>{e.isDraped=n}),s.on("changed",()=>{e.geometry=g(t)?t.geometry:null}),i.trackGraphicState(s),i.maskOccludee(t),P(e)];this._settings.visualElements.lineGraphics.outline.apply(e),e.attached=!0,this._visualElementHandle=b(o)}};function g(r){return r.geometry!=null&&r.geometry.type==="polyline"}const A=100;let m=class extends T{constructor(r){super(r),this._chartData=null,this._visualElements=[]}initialize(){const r=I(t=>{this._update(t)},A);this.addHandles([h(()=>({spatialReference:this.view.spatialReference,chartData:this._chartData}),r,p),r])}destroy(){this._destroyVisualElements()}remove(){this._destroyVisualElements()}update(r){this._chartData=r}_update(r){const{chartData:t}=r;if(t==null)return this.remove();if(!t.refined)return;const i=this._visualElements,e=t.lines.filter(a=>a.viewVisualizationEnabled),s=e.length;for(;i.length>s;)i.pop().destroy();const o=G().profileLinesStyle3D;for(;i.length<s;){const a=new w({view:this.view,elevationInfo:{mode:"absolute-height",offset:0},innerWidth:o.width-o.outlineSize,width:o.width,falloff:o.falloff,color:o.outlineColor,renderOccluded:o.renderOccluded,isDecoration:!0});i.push(a)}const n=r.spatialReference;for(let a=0;a<s;++a){const d=i[a],l=e[s-1-a];d.geometry=this._createLineGeometry(l,n),d.innerColor=S(k.toUnitRGBA(l.color))}}_createLineGeometry(r,t){const i=r.samples??[],e=i.length-1,s=[];let o=[];for(let n=0;n<=e;n++){const{x:a,y:d,z:l}=i[n];l!=null&&o.push([a,d,l]),n!==e&&l!=null||!o.length||(s.push(o),o=[])}return new z({paths:s,hasZ:!0,spatialReference:t})}_destroyVisualElements(){this._visualElements.forEach(r=>r.destroy()),this._visualElements.length=0}};u([f()],m.prototype,"view",void 0),u([f()],m.prototype,"_chartData",void 0),m=u([L("esri.widgets.ElevationProfile.support.ProfileLines3D")],m);class he{constructor(t,i){this._handles=new V,this._inputRepresentation=new j({view:t}),this._hoveredPoints=new M({view:t}),this._profileLines=new m({view:t}),this._handles.add([h(()=>i.viewModel.hoveredPoints,e=>this._hoveredPoints.update(e),p),h(()=>{const{state:e,editable:s,highlightEnabled:o,viewModel:n}=i,a=n.input;return a&&(a.commitProperty("geometry"),a.commitProperty("layer")),{input:a,state:e,editable:s,highlightEnabled:o}},e=>this._updateInputRepresentation(e),p),h(()=>i.viewModel.chartData,e=>this._profileLines.update(e),p),h(()=>{var e;return(e=i.viewModel.input)==null?void 0:e.geometry},()=>{this._profileLines.remove()},p)])}destroy(){this._handles=c(this._handles),this._inputRepresentation=c(this._inputRepresentation),this._hoveredPoints=c(this._hoveredPoints),this._profileLines=c(this._profileLines)}_updateInputRepresentation({input:t,state:i,editable:e,highlightEnabled:s}){const o=this._inputRepresentation;if(!s)return o.remove();i===v.Selected?o.showHighlight(t):i!==v.Created||e?o.remove():o.showReshaping(t)}}export{he as ElevationProfileView3D};
